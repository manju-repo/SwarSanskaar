{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\pages\\\\BranchStudents.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport StudentList from '../components/StudentList';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BranchStudents() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [branchName, setBranchName] = useState();\n  const {\n    branchId\n  } = useParams();\n  const fetchStudents = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\n      const {\n        students\n      } = await response.json();\n      console.log(students);\n      setStudents(students);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [branchId]);\n  const fetchBranchName = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/branches/${branchId}`);\n      const {\n        branch\n      } = await response.json();\n      setBranchName(branch.branch_name);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [branchId]);\n  useEffect(() => {\n    fetchBranchName();\n    fetchStudents();\n  }, [branchId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        fontSize: '15px',\n        marginLeft: '5px'\n      },\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textDecoration: 'none'\n        },\n        to: \"/homepage\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"< \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 65\n        }, this), \"All Branches\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textDecoration: 'none',\n          marginBottom: '400px'\n        },\n        children: [branchName, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), students && /*#__PURE__*/_jsxDEV(StudentList, {\n      students: students,\n      branchId: branchId,\n      updateStudentList: fetchStudents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(BranchStudents, \"+CAKU4HgwBnv6CInUBY9/yrYqf0=\", false, function () {\n  return [useParams];\n});\n_c = BranchStudents;\n;\nexport default BranchStudents;\nvar _c;\n$RefreshReg$(_c, \"BranchStudents\");","map":{"version":3,"names":["useEffect","useState","useCallback","useParams","useSearchParams","StudentList","NavLink","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BranchStudents","_s","students","setStudents","branchName","setBranchName","branchId","fetchStudents","response","fetch","json","console","log","error","message","fetchBranchName","branch","branch_name","children","style","textAlign","fontSize","marginLeft","textDecoration","to","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","marginBottom","updateStudentList","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/pages/BranchStudents.js"],"sourcesContent":["import { useEffect, useState, useCallback} from 'react';\r\nimport {useParams, useSearchParams} from 'react-router-dom';\r\nimport StudentList from '../components/StudentList';\r\nimport {NavLink, useNavigate} from 'react-router-dom';\r\n\r\nfunction BranchStudents() {\r\n    const [students, setStudents] = useState([]);\r\n    const [branchName, setBranchName] = useState();\r\n    const {branchId} = useParams();\r\n\r\n    const fetchStudents=useCallback(async()=>{\r\n        try{\r\n\r\n            const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\r\n            const {students} = await response.json();\r\n            console.log(students);\r\n            setStudents(students);\r\n          }catch(error){\r\n            console.log(error.message);\r\n           }\r\n        },[branchId]);\r\n\r\n    const fetchBranchName=useCallback(async()=>{\r\n     try{\r\n        const response = await fetch(`http://localhost:5000/branches/${branchId}`);\r\n        const {branch} = await response.json();\r\n        setBranchName(branch.branch_name);\r\n\r\n     }catch(error){\r\n        console.log(error.message);\r\n       }\r\n    },[branchId]);\r\n    useEffect(() => {\r\n        fetchBranchName();\r\n        fetchStudents();\r\n  },[branchId]);\r\n\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    <div style={{textAlign:'left', fontSize:'15px', marginLeft:'5px'}}>\r\n        <NavLink style={{textDecoration:'none'}} to=\"/homepage\"><span>&#60; </span>\r\n        All Branches</NavLink></div>\r\n    <div style={{textAlign:'center',fontWeight:'bold', fontSize:'20px'}}>\r\n    <NavLink style={{textDecoration:'none', marginBottom:'400px'}}>{branchName} <span>Branch</span></NavLink></div>\r\n    {students && <StudentList students={students} branchId={branchId} updateStudentList={fetchStudents}/>}</>);\r\n  };\r\n\r\n    export default BranchStudents;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}