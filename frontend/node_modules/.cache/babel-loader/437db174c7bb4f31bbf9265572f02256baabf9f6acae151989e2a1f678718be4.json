{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\pages\\\\Defaulters.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport StudentList from '../components/StudentList';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Defaulters() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const fetchStudents = async () => {\n    try {\n      console.log(\"defaulter list\");\n      const response = await fetch(`http://localhost:5000/students/defaulters`);\n      const {\n        students\n      } = await response.json();\n      const studentsWithBranches = await Promise.all(students.map(async student => {\n        if (student.branch_id) {\n          try {\n            const branchResponse = await fetch(`http://localhost:5000/students/${student.branch_id}`);\n            const {\n              branch\n            } = await branchResponse.json();\n            console.log(branch.branch_name);\n            return {\n              ...student,\n              branchName: branch.branch_name\n            }; // Add branchName to student\n          } catch (error) {\n            console.error(`Failed to fetch branch for student ${student.name}: ${error.message}`);\n            return {\n              ...student,\n              branchName: 'Unknown'\n            }; // Default name if fetch fails\n          }\n        }\n        return {\n          ...student,\n          branchName: 'No Branch'\n        }; // Default for no branchId\n      }));\n      console.log(studentsWithBranches);\n      setStudents(students);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      style: {\n        marginLeft: '50px',\n        textDecoration: 'none'\n      },\n      className: \"fa fa-arrow-left\",\n      \"aria-hidden\": \"true\",\n      to: \"/homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), students && /*#__PURE__*/_jsxDEV(StudentList, {\n      students: students,\n      updateStudentList: fetchStudents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(Defaulters, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n_c = Defaulters;\n;\nexport default Defaulters;\nvar _c;\n$RefreshReg$(_c, \"Defaulters\");","map":{"version":3,"names":["useEffect","useState","StudentList","NavLink","jsxDEV","_jsxDEV","Fragment","_Fragment","Defaulters","_s","students","setStudents","fetchStudents","console","log","response","fetch","json","studentsWithBranches","Promise","all","map","student","branch_id","branchResponse","branch","branch_name","branchName","error","name","message","children","style","marginLeft","textDecoration","className","to","fileName","_jsxFileName","lineNumber","columnNumber","updateStudentList","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/pages/Defaulters.js"],"sourcesContent":["import { useEffect, useState} from 'react';\r\nimport StudentList from '../components/StudentList';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Defaulters() {\r\n    const [students, setStudents] = useState([]);\r\n\r\n\r\n    const fetchStudents=async()=>{\r\n        try{\r\n            console.log(\"defaulter list\");\r\n\r\n            const response = await fetch(`http://localhost:5000/students/defaulters`);\r\n            const {students} = await response.json();\r\n            const studentsWithBranches = await Promise.all(\r\n            students.map(async (student) => {\r\n                if(student.branch_id) {\r\n                    try {\r\n                        const branchResponse = await fetch(`http://localhost:5000/students/${student.branch_id}`);\r\n                        const {branch} = await branchResponse.json();\r\n                        console.log(branch.branch_name);\r\n                        return { ...student, branchName: branch.branch_name }; // Add branchName to student\r\n                    }\r\n                    catch (error) {\r\n                        console.error(`Failed to fetch branch for student ${student.name}: ${error.message}`);\r\n                        return { ...student, branchName: 'Unknown' }; // Default name if fetch fails\r\n                    }\r\n                }\r\n                return { ...student, branchName: 'No Branch' }; // Default for no branchId\r\n            }));\r\n            console.log(studentsWithBranches);\r\n            setStudents(students);\r\n\r\n\r\n          }catch(error){\r\n            console.log(error.message);\r\n           }\r\n        }\r\n\r\n    useEffect(() => {\r\n        fetchStudents();\r\n  },[]);\r\n\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    <NavLink style={{marginLeft:'50px', textDecoration:'none'}} className=\"fa fa-arrow-left\" aria-hidden=\"true\" to=\"/homepage\"></NavLink>\r\n\r\n    {students && <StudentList students={students}  updateStudentList={fetchStudents}/>}</>);\r\n  };\r\n\r\n    export default Defaulters;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG5C,MAAMW,aAAa,GAAC,MAAAA,CAAA,KAAS;IACzB,IAAG;MACCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAE7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;MACzE,MAAM;QAACN;MAAQ,CAAC,GAAG,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxC,MAAMC,oBAAoB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC9CV,QAAQ,CAACW,GAAG,CAAC,MAAOC,OAAO,IAAK;QAC5B,IAAGA,OAAO,CAACC,SAAS,EAAE;UAClB,IAAI;YACA,MAAMC,cAAc,GAAG,MAAMR,KAAK,CAAC,kCAAkCM,OAAO,CAACC,SAAS,EAAE,CAAC;YACzF,MAAM;cAACE;YAAM,CAAC,GAAG,MAAMD,cAAc,CAACP,IAAI,CAAC,CAAC;YAC5CJ,OAAO,CAACC,GAAG,CAACW,MAAM,CAACC,WAAW,CAAC;YAC/B,OAAO;cAAE,GAAGJ,OAAO;cAAEK,UAAU,EAAEF,MAAM,CAACC;YAAY,CAAC,CAAC,CAAC;UAC3D,CAAC,CACD,OAAOE,KAAK,EAAE;YACVf,OAAO,CAACe,KAAK,CAAC,sCAAsCN,OAAO,CAACO,IAAI,KAAKD,KAAK,CAACE,OAAO,EAAE,CAAC;YACrF,OAAO;cAAE,GAAGR,OAAO;cAAEK,UAAU,EAAE;YAAU,CAAC,CAAC,CAAC;UAClD;QACJ;QACA,OAAO;UAAE,GAAGL,OAAO;UAAEK,UAAU,EAAE;QAAY,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC,CAAC;MACHd,OAAO,CAACC,GAAG,CAACI,oBAAoB,CAAC;MACjCP,WAAW,CAACD,QAAQ,CAAC;IAGvB,CAAC,QAAMkB,KAAK,EAAC;MACXf,OAAO,CAACC,GAAG,CAACc,KAAK,CAACE,OAAO,CAAC;IAC3B;EACH,CAAC;EAEL9B,SAAS,CAAC,MAAM;IACZY,aAAa,CAAC,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;EAKH,oBACAP,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACA1B,OAAA,CAACF,OAAO;MAAC6B,KAAK,EAAE;QAACC,UAAU,EAAC,MAAM;QAAEC,cAAc,EAAC;MAAM,CAAE;MAACC,SAAS,EAAC,kBAAkB;MAAC,eAAY,MAAM;MAACC,EAAE,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,EAEpI9B,QAAQ,iBAAIL,OAAA,CAACH,WAAW;MAACQ,QAAQ,EAAEA,QAAS;MAAE+B,iBAAiB,EAAE7B;IAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAAG,CAAC;AACxF;AAAC/B,EAAA,CA/CMD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA+ChB;AAEC,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}