{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\pages\\\\BranchStudents.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport StudentList from '../components/StudentList';\n//for students of branchId\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BranchStudents() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [branchName, setBranchName] = useState();\n  const {\n    branchId\n  } = useParams();\n  const fetchStudents = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\n      const {\n        students\n      } = await response.json();\n      console.log(students);\n      setStudents(students);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [branchId]);\n  const fetchBranchName = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/branches/${branchId}`);\n      const {\n        branch\n      } = await response.json();\n      setBranchName(branch.branch_name);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [branchId]);\n  useEffect(() => {\n    fetchBranchName();\n    fetchStudents();\n  }, [branchId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: branchName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), students && /*#__PURE__*/_jsxDEV(StudentList, {\n      students: students,\n      updateStudentList: fetchStudents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(BranchStudents, \"+CAKU4HgwBnv6CInUBY9/yrYqf0=\", false, function () {\n  return [useParams];\n});\n_c = BranchStudents;\n;\nexport default BranchStudents;\nvar _c;\n$RefreshReg$(_c, \"BranchStudents\");","map":{"version":3,"names":["useEffect","useState","useCallback","useParams","useSearchParams","StudentList","jsxDEV","_jsxDEV","Fragment","_Fragment","BranchStudents","_s","students","setStudents","branchName","setBranchName","branchId","fetchStudents","response","fetch","json","console","log","error","message","fetchBranchName","branch","branch_name","children","fileName","_jsxFileName","lineNumber","columnNumber","updateStudentList","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/pages/BranchStudents.js"],"sourcesContent":["import { useEffect, useState, useCallback} from 'react';\r\nimport {useParams, useSearchParams} from 'react-router-dom';\r\nimport StudentList from '../components/StudentList';\r\n//for students of branchId\r\nfunction BranchStudents() {\r\n    const [students, setStudents] = useState([]);\r\n    const [branchName, setBranchName] = useState();\r\n    const {branchId} = useParams();\r\n\r\n    const fetchStudents=useCallback(async()=>{\r\n        try{\r\n\r\n            const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\r\n            const {students} = await response.json();\r\n            console.log(students);\r\n            setStudents(students);\r\n          }catch(error){\r\n            console.log(error.message);\r\n           }\r\n        },[branchId]);\r\n\r\n    const fetchBranchName=useCallback(async()=>{\r\n     try{\r\n        const response = await fetch(`http://localhost:5000/branches/${branchId}`);\r\n        const {branch} = await response.json();\r\n        setBranchName(branch.branch_name);\r\n\r\n     }catch(error){\r\n        console.log(error.message);\r\n       }\r\n    },[branchId]);\r\n    useEffect(() => {\r\n        fetchBranchName();\r\n        fetchStudents();\r\n  },[branchId]);\r\n\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    <div>{branchName}</div>\r\n    {students && <StudentList students={students}  updateStudentList={fetchStudents}/>}</>);\r\n  };\r\n\r\n    export default BranchStudents;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AACvD,SAAQC,SAAS,EAAEC,eAAe,QAAO,kBAAkB;AAC3D,OAAOC,WAAW,MAAM,2BAA2B;AACnD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAC9C,MAAM;IAACe;EAAQ,CAAC,GAAGb,SAAS,CAAC,CAAC;EAE9B,MAAMc,aAAa,GAACf,WAAW,CAAC,YAAS;IACrC,IAAG;MAEC,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCH,QAAQ,EAAE,CAAC;MACjF,MAAM;QAACJ;MAAQ,CAAC,GAAG,MAAMM,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxCC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;MACrBC,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC,QAAMW,KAAK,EAAC;MACXF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC3B;EACH,CAAC,EAAC,CAACR,QAAQ,CAAC,CAAC;EAEjB,MAAMS,eAAe,GAACvB,WAAW,CAAC,YAAS;IAC1C,IAAG;MACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCH,QAAQ,EAAE,CAAC;MAC1E,MAAM;QAACU;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAACE,IAAI,CAAC,CAAC;MACtCL,aAAa,CAACW,MAAM,CAACC,WAAW,CAAC;IAEpC,CAAC,QAAMJ,KAAK,EAAC;MACVF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC3B;EACH,CAAC,EAAC,CAACR,QAAQ,CAAC,CAAC;EACbhB,SAAS,CAAC,MAAM;IACZyB,eAAe,CAAC,CAAC;IACjBR,aAAa,CAAC,CAAC;EACrB,CAAC,EAAC,CAACD,QAAQ,CAAC,CAAC;EAKX,oBACAT,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACArB,OAAA;MAAAqB,QAAA,EAAMd;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACtBpB,QAAQ,iBAAIL,OAAA,CAACF,WAAW;MAACO,QAAQ,EAAEA,QAAS;MAAEqB,iBAAiB,EAAEhB;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAAG,CAAC;AACxF;AAACrB,EAAA,CAvCMD,cAAc;EAAA,QAGAP,SAAS;AAAA;AAAA+B,EAAA,GAHvBxB,cAAc;AAuCpB;AAEC,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}