{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\FeesPaymentForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigate } from 'react-router-dom';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useForm, setValue } from 'react-hook-form';\nimport classes from './RegistrationForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeesPaymentForm = () => {\n  _s();\n  var _formData$address;\n  const [branches, setBranches] = useState([]); // State to hold branch names\n  const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\n  const [students, setStudents] = useState([]); // State to hold student names\n  const [selectedStudent, setSelectedStudent] = useState(''); // State to store selected studentId\n  const [studentName, setStudentName] = useState(''); //state to hold student name in case of parameter studentId\n  const [branchName, setBranchName] = useState(''); //state to hold branch name in case of parameter studentId\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [monthNumber, setMonthNumber] = useState(null);\n  const [amountDue, setAmountDue] = useState(null);\n  const [amountPaid, setAmountPaid] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [paymentDate, setPaymentDate] = useState(null);\n  const [refresh, setRefresh] = useState(false); // State to trigger re-fetch\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: [],\n    monthly_fees: '',\n    payments: []\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const {\n    studentId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBranchStudents = async () => {\n      if (selectedBranch) {\n        const response = await fetch(`http://localhost:5000/students/branch/${selectedBranch}`);\n        const {\n          students\n        } = await response.json();\n        setStudents(students);\n      }\n    };\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/students`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          students\n        } = await response.json();\n        console.log(students);\n        setStudents(students);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const fetchStudent = async student_id => {\n      try {\n        const response = await fetch(`http://localhost:5000/students/${student_id}`);\n        const {\n          student\n        } = await response.json();\n        console.log(student);\n        if (student) {\n          setFormData({\n            name: student.name,\n            email: student.email,\n            phone: student.phone,\n            address: student.address,\n            monthly_fees: student.monthly_fees,\n            payments: student.payments\n          });\n        }\n        if (student !== null && student !== void 0 && student.branch_id) {\n          const branchResp = await fetch(`http://localhost:5000/branches/${student.branch_id}`);\n          const {\n            branch\n          } = await branchResp.json();\n          setBranchName(branch === null || branch === void 0 ? void 0 : branch.branch_name);\n          setFormData(prevFormData => ({\n            ...prevFormData,\n            branch: branch === null || branch === void 0 ? void 0 : branch.branch_name\n          }));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (studentId || selectedStudent) fetchStudent(studentId || selectedStudent);else {\n      fetchBranches();\n      //fetchStudents();\n      if (selectedBranch) fetchBranchStudents();else setStudents(null);\n    }\n  }, [studentId, selectedBranch]);\n  const submitHandler = async data => {\n    console.log(data);\n    data.studentId = studentId || selectedStudent;\n    data.monthNumber = monthNumber;\n    data.mode = selectedMode;\n    data.paymentDate = paymentDate;\n    console.log(data);\n    let response;\n    response = await fetch(`http://localhost:5000/payment/fees`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n    alert('Fees Updated');\n    navigate('/students');\n  };\n  const resetHandler = () => {\n    window.history.back();\n  };\n  const handleBranchChange = async event => {\n    setSelectedBranch(event.target.value); // Set selected branchId\n    console.log(selectedBranch);\n  };\n  const handleStudentChange = event => {\n    setSelectedStudent(event.target.value); // Set selected studentId\n  };\n  const handleMonthChange = event => {\n    var _formData$payments, _formData$payments2, _formData$payments3;\n    setMonthNumber(event.target.selectedIndex);\n    setSelectedMonth(event.target.value);\n    console.log((_formData$payments = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments === void 0 ? void 0 : _formData$payments.amount_paid);\n    setAmountDue((_formData$payments2 = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments2 === void 0 ? void 0 : _formData$payments2.amount_due);\n    setAmountPaid((_formData$payments3 = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments3 === void 0 ? void 0 : _formData$payments3.amount_paid);\n  };\n  const handleModeChange = event => {\n    setSelectedMode(event.target.value); // Set selected Mode\n  };\n  const handleDateChange = event => {\n    setPaymentDate(event.target.value);\n  };\n  const waiveFeesHAndler = async event => {\n    alert(`Waive fees of ${amountDue} for ${selectedMonth}`);\n    const student_id = studentId || selectedStudent;\n    const response = await fetch(`http://localhost:5000/students/waivefees`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        studentId: student_id,\n        month: selectedMonth\n      })\n    });\n    if (response !== null && response !== void 0 && response.success) alert('Waived off fees for ${selectedMonth}');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      className: classes.form,\n      style: {\n        border: '2px solid grey'\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: studentId || selectedStudent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              textAlign: 'center',\n              fontSize: '20px',\n              fontWeight: 'bold',\n              border: '2px solid grey'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              border: '2px solid grey'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '50%',\n                textAlign: 'left',\n                marginTop: '20px',\n                marginLeft: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Email:  \", formData.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Phone:  \", formData.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Monthly Fees: Rs. \", formData.monthly_fees]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Branch:    \", formData.branch]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  fontSize: \"16px\",\n                  fontFamily: \"inherit\",\n                  textAlign: 'left'\n                },\n                children: [\"Address:   \", (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.join('\\n')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '20px',\n                marginLeft: '12px',\n                marginBottom: '20px',\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  marginRight: '15px'\n                },\n                htmlFor: \"month\",\n                children: \"Payment for\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                style: {\n                  marginLeft: '100px'\n                },\n                id: \"month\",\n                name: \"month\",\n                ...register(\"month\", {\n                  required: true\n                }),\n                value: selectedMonth,\n                onChange: handleMonthChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 17\n                }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: month,\n                  children: month\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 17\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 15\n              }, this), errors.month && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Please select the Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 9\n            }, this), selectedMonth && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Amount Due: Rs. \", amountDue, \"/-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Amount Paid: Rs. \", amountPaid, \"/-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 10\n              }, this), amountDue > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    fontSize: '12px',\n                    marginTop: '20px'\n                  },\n                  onClick: waiveFeesHAndler,\n                  children: \"Waive Fees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            ...register(\"monthNumber\"),\n            value: monthNumber || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '40%',\n              paddingTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '100px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"paymentDate\",\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: '150px',\n                  height: '25px'\n                },\n                type: \"date\",\n                id: \"paymentDate\",\n                ...register(\"paymentDate\", {\n                  required: true\n                }),\n                name: \"paymentDate\",\n                value: paymentDate,\n                onChange: handleDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 15\n              }, this), errors.paymentDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Select Date of Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '100px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"amount\",\n                children: \"Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this), \"Rs \", /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: '50px',\n                  height: '15px'\n                },\n                type: \"text\",\n                id: \"amount\",\n                ...register(\"amount\", {\n                  required: true\n                }),\n                name: \"amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 18\n              }, this), errors.amount && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Enter Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '100px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"mode\",\n                children: \"Mode of Payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"mode\",\n                ...register(\"mode\", {\n                  required: true\n                }),\n                name: \"mode\",\n                value: selectedMode,\n                onChange: handleModeChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cash\",\n                  children: \"Cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"upi\",\n                  children: \"UPI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"card\",\n                  children: \"Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 14\n              }, this), errors.mode && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Select Mode of Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '50px',\n            marginLeft: '100px',\n            width: '80%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '100px'\n              },\n              htmlFor: \"branch\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"branch\",\n              name: \"branch\",\n              value: selectedBranch,\n              onChange: handleBranchChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 13\n              }, this), branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: branch._id,\n                children: branch.branch_name\n              }, branch._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '100px'\n              },\n              htmlFor: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"student\",\n              name: \"student\",\n              value: selectedStudent,\n              onChange: handleStudentChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 13\n              }, this), students && students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: student._id,\n                children: student.name\n              }, student._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this)\n      }, void 0, false), (studentId || selectedStudent) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginRight: '10px'\n          },\n          className: classes.button,\n          type: \"reset\",\n          onClick: resetHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"submit\",\n          children: isSubmitting ? 'Submitting' : 'Proceed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 6\n  }, this);\n};\n_s(FeesPaymentForm, \"xEIEGLPWVP1ruqoEw53i1oc9AEE=\", false, function () {\n  return [useForm, useParams, useLocation, useNavigate];\n});\n_c = FeesPaymentForm;\nexport default FeesPaymentForm;\nvar _c;\n$RefreshReg$(_c, \"FeesPaymentForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigate","useLocation","useParams","useForm","setValue","classes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeesPaymentForm","_s","_formData$address","branches","setBranches","selectedBranch","setSelectedBranch","students","setStudents","selectedStudent","setSelectedStudent","studentName","setStudentName","branchName","setBranchName","selectedMonth","setSelectedMonth","monthNumber","setMonthNumber","amountDue","setAmountDue","amountPaid","setAmountPaid","amount","setAmount","selectedMode","setSelectedMode","paymentDate","setPaymentDate","refresh","setRefresh","months","formData","setFormData","name","email","phone","address","monthly_fees","payments","register","handleSubmit","formState","errors","isSubmitting","reset","studentId","location","navigate","fetchBranchStudents","response","fetch","json","fetchBranches","data","console","log","error","fetchStudents","method","headers","fetchStudent","student_id","student","branch_id","branchResp","branch","branch_name","prevFormData","submitHandler","mode","body","JSON","stringify","alert","resetHandler","window","history","back","handleBranchChange","event","target","value","handleStudentChange","handleMonthChange","_formData$payments","_formData$payments2","_formData$payments3","selectedIndex","amount_paid","amount_due","handleModeChange","handleDateChange","waiveFeesHAndler","month","success","className","container","children","onSubmit","form","style","border","width","textAlign","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","control","display","justifyContent","marginTop","marginLeft","fontFamily","join","marginBottom","marginRight","htmlFor","id","required","onChange","map","index","onClick","type","height","paddingTop","minWidth","_id","message","button","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/FeesPaymentForm.js"],"sourcesContent":["\r\nimport {\r\n  Form,\r\n  Link,\r\n  useSearchParams,\r\n  useActionData,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport {useLocation, useParams} from 'react-router-dom';\r\nimport { useForm, setValue } from 'react-hook-form';\r\nimport classes from './RegistrationForm.module.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst FeesPaymentForm=()=>{\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n    const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\r\n    const [students, setStudents] = useState([]); // State to hold student names\r\n    const [selectedStudent, setSelectedStudent] = useState(''); // State to store selected studentId\r\n    const [studentName,setStudentName]=useState('');    //state to hold student name in case of parameter studentId\r\n    const [branchName, setBranchName]=useState('');     //state to hold branch name in case of parameter studentId\r\n    const [selectedMonth, setSelectedMonth] = useState('');\r\n    const [monthNumber, setMonthNumber] = useState(null);\r\n    const [amountDue, setAmountDue]=useState(null);\r\n    const [amountPaid, setAmountPaid]=useState(null);\r\n    const [amount, setAmount]=useState(null);\r\n    const [selectedMode, setSelectedMode]=useState(null);\r\n    const [paymentDate, setPaymentDate]=useState(null);\r\n    const [refresh, setRefresh] = useState(false); // State to trigger re-fetch\r\n\r\n\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n    const [formData, setFormData] = useState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          address: [],\r\n          monthly_fees: '',\r\n          payments:[]\r\n        });\r\n\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset\r\n  } = useForm();\r\n\r\n    const { studentId } = useParams();\r\n    const location = useLocation();\r\n    const navigate= useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchBranchStudents = async() =>{\r\n        if (selectedBranch) {\r\n            const response=await fetch(`http://localhost:5000/students/branch/${selectedBranch}`);\r\n            const {students} =await response.json();\r\n            setStudents(students);\r\n         }\r\n       }\r\n\r\n      const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n\r\n    const fetchStudents=async()=>{\r\n      try{\r\n           const response=await fetch(`http://localhost:5000/students`,{\r\n                 method:'GET',\r\n                 headers:{\r\n                     'Content-Type':'application/json',\r\n                     }\r\n                 });\r\n\r\n           const {students}=await response.json();\r\n           console.log(students);\r\n           setStudents(students);\r\n       }\r\n       catch(error){\r\n           console.log(error);\r\n       }\r\n      };\r\n\r\n      const fetchStudent=async(student_id)=>{\r\n            try{\r\n                 const response=await fetch(`http://localhost:5000/students/${student_id}`);\r\n                 const {student}=await response.json();\r\n                 console.log(student);\r\n                 if(student){\r\n                  setFormData({\r\n                            name: student.name,\r\n                            email: student.email,\r\n                            phone: student.phone,\r\n                            address: student.address,\r\n                            monthly_fees: student.monthly_fees,\r\n                            payments: student.payments\r\n                          });\r\n                  }\r\n                 if (student?.branch_id) {\r\n                    const branchResp=await fetch(`http://localhost:5000/branches/${student.branch_id}`);\r\n                    const {branch}=await branchResp.json();\r\n                    setBranchName(branch?.branch_name);\r\n\r\n                    setFormData((prevFormData) => ({\r\n                      ...prevFormData,\r\n                      branch: branch?.branch_name\r\n                    }));\r\n                 }\r\n             }\r\n             catch(error){\r\n                 console.log(error);\r\n             }\r\n\r\n       };\r\n\r\n      if (studentId || selectedStudent)\r\n         fetchStudent(studentId||selectedStudent);\r\n      else{\r\n          fetchBranches();\r\n          //fetchStudents();\r\n          if(selectedBranch) fetchBranchStudents()\r\n          else setStudents(null);\r\n      }\r\n\r\n    }, [studentId, selectedBranch]);\r\n\r\n\r\n\r\n  const submitHandler =async (data) => {\r\n      console.log(data);\r\n\r\n    data.studentId = studentId || selectedStudent;\r\n    data.monthNumber = monthNumber;\r\n    data.mode=selectedMode;\r\n    data.paymentDate=paymentDate;\r\n    console.log(data);\r\n    let response;\r\n      response= await fetch(`http://localhost:5000/payment/fees`, {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(data)\r\n     });\r\n\r\n      console.log(response);\r\n      alert('Fees Updated');\r\n      navigate('/students');\r\n  };\r\n\r\n\r\n   const resetHandler=()=>{\r\n         window.history.back();\r\n   };\r\n\r\n\r\n    const handleBranchChange = async(event) => {\r\n         setSelectedBranch(event.target.value); // Set selected branchId\r\n         console.log(selectedBranch);\r\n    };\r\n\r\n    const handleStudentChange = (event) => {\r\n         setSelectedStudent(event.target.value); // Set selected studentId\r\n    };\r\n\r\n    const handleMonthChange = (event) => {\r\n        setMonthNumber(event.target.selectedIndex);\r\n        setSelectedMonth(event.target.value);\r\n        console.log(formData.payments[event.target.selectedIndex-1]?.amount_paid);\r\n        setAmountDue(formData.payments[event.target.selectedIndex-1]?.amount_due);\r\n        setAmountPaid(formData.payments[event.target.selectedIndex-1]?.amount_paid);\r\n    };\r\n\r\n    const handleModeChange = (event) => {\r\n        setSelectedMode(event.target.value); // Set selected Mode\r\n    };\r\n\r\n    const handleDateChange = (event) => {\r\n        setPaymentDate(event.target.value);\r\n     };\r\n\r\n    const waiveFeesHAndler = async(event) => {\r\n        alert(`Waive fees of ${amountDue} for ${selectedMonth}`);\r\n        const student_id=studentId || selectedStudent;\r\n        const response=await fetch(`http://localhost:5000/students/waivefees`,{\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({studentId:student_id,month:selectedMonth})\r\n        });\r\n        if(response?.success)\r\n            alert('Waived off fees for ${selectedMonth}');\r\n    };\r\n\r\n\r\n   return (\r\n     <div className={classes.container}>\r\n     <form onSubmit={handleSubmit(submitHandler)} className={classes.form} style={{ border:'2px solid grey'}}>\r\n     <>\r\n     {(studentId || selectedStudent) ? (<>\r\n         <div style={{width:'100%',textAlign:'center',fontSize:'20px',fontWeight:'bold', border:'2px solid grey'}}>\r\n           <p>{formData.name}</p>\r\n         </div>\r\n\r\n        <div className={classes.control} style={{ display: \"flex\", justifyContent: \"space-between\",  border:'2px solid grey'}}>\r\n            <div style={{width:'50%', textAlign:'left', marginTop:'20px', marginLeft:'5px'}} >\r\n                <div style={{textAlign:'left'}}>Email:  {formData.email}</div>\r\n                <div style={{textAlign:'left'}}>Phone:  {formData.phone}</div>\r\n                <div style={{textAlign:'left'}}>Monthly Fees: Rs. {formData.monthly_fees}</div>\r\n\r\n            </div>\r\n            <div style={{textAlign: \"right\"}} >\r\n                <div  style={{textAlign:'left'}}>Branch:    {formData.branch}</div>\r\n                <pre style={{ fontSize: \"16px\", fontFamily: \"inherit\",  textAlign:'left' }}>Address:   {formData.address?.join('\\n')}</pre>\r\n            </div>\r\n        </div>\r\n\r\n        <div style={{width:'100%', display:'flex'}}>\r\n        <div style={{marginTop:'20px',marginLeft:'12px', marginBottom:'20px', width:'40%'}}>\r\n              <label style={{marginRight:'15px'}} htmlFor=\"month\">Payment for</label>\r\n              <select style={{marginLeft:'100px'}}\r\n                id=\"month\"\r\n                name=\"month\"\r\n                {...register(\"month\", { required: true })}\r\n                value={selectedMonth} onChange={handleMonthChange}>\r\n\r\n                <option value=\"\">Select Month</option>\r\n                {months.map((month, index) => (\r\n                <option key={index} value={month}>\r\n                  {month}\r\n                </option>\r\n              ))}\r\n             </select>\r\n            {errors.month && <p className=\"errorMsg\">Please select the Month</p>}\r\n\r\n         </div>\r\n        {selectedMonth && (<>\r\n         <div style={{width:'30%'}}>\r\n            <p>Amount Due: Rs. {amountDue}/-</p>\r\n         </div>\r\n         <div style={{width:'30%'}}>\r\n            <p>Amount Paid: Rs. {amountPaid}/-</p>\r\n         </div>\r\n         {amountDue>0 && <div style={{width:'30%'}}>\r\n            <button style={{fontSize:'12px', marginTop:'20px'}} onClick={waiveFeesHAndler}>Waive Fees</button>\r\n         </div>}\r\n         </>)}\r\n        </div>\r\n        <input type=\"hidden\" {...register(\"monthNumber\")} value={monthNumber || ''} />\r\n\r\n        <div style={{width:'100%', height:'40%',paddingTop:'20px'}}>\r\n               <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"paymentDate\">Date:</label>\r\n              <input\r\n                  style={{ width: '150px', height: '25px' }}\r\n                  type=\"date\"\r\n                  id=\"paymentDate\"\r\n                  {...register(\"paymentDate\", { required: true })}\r\n                  name=\"paymentDate\"\r\n                  value={paymentDate}\r\n                  onChange={handleDateChange}\r\n                  />\r\n            {errors.paymentDate && <p className=\"errorMsg\">Select Date of Payment</p>}\r\n\r\n              </div>\r\n              <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"amount\">Amount:</label>\r\n              Rs <input style={{width:'50px',height:'15px'}} type=\"text\" id=\"amount\"\r\n              {...register(\"amount\", { required: true })}\r\n              name=\"amount\"/>\r\n            {errors.amount && <p className=\"errorMsg\">Enter Amount</p>}\r\n\r\n              </div>\r\n              <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"mode\">Mode of Payment:</label>\r\n             <select\r\n                id=\"mode\"\r\n                {...register(\"mode\", { required: true })}\r\n                name=\"mode\" value={selectedMode} onChange={handleModeChange}>\r\n\r\n                <option value=\"\">Select Mode</option>\r\n                  <option  value=\"cash\">\r\n                    Cash\r\n                  </option>\r\n                  <option  value=\"upi\">\r\n                   UPI\r\n                  </option>\r\n                  <option  value=\"card\">\r\n                    Card\r\n                  </option>\r\n              </select>\r\n            {errors.mode && <p className=\"errorMsg\">Select Mode of Payment</p>}\r\n              </div>\r\n        </div>\r\n        </>\r\n      ):(\r\n        <div style={{display:'flex', marginTop:'50px',marginLeft:'100px', width:'80%'}}>\r\n        <div className={classes.control}>\r\n          <label style={{width:'100px'}} htmlFor=\"branch\">Branch</label>\r\n          <select\r\n            id=\"branch\"\r\n            name=\"branch\" value={selectedBranch} onChange={handleBranchChange}>\r\n\r\n            <option value=\"\">Select a Branch</option>\r\n            {branches && branches.map((branch) => (\r\n              <option key={branch._id} value={branch._id}>\r\n                {branch.branch_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label  style={{width:'100px'}} htmlFor=\"student\">Student</label>\r\n          <select\r\n            id=\"student\"\r\n            name=\"student\" value={selectedStudent} onChange={handleStudentChange}>\r\n\r\n            <option value=\"\">Select a Student</option>\r\n            {students && students.map((student) => (\r\n              <option key={student._id} value={student._id}>\r\n                {student.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n        </div>\r\n      )}\r\n      </>\r\n    {\r\n        (studentId || selectedStudent) &&\r\n       (<div style={{marginTop:'100px'}}>\r\n         <button style={{ marginRight:'10px'}} className={classes.button} type=\"reset\" onClick={resetHandler}>\r\n           Cancel\r\n         </button>\r\n         <button className={classes.button} type=\"submit\" >\r\n           {isSubmitting? 'Submitting': 'Proceed'}\r\n         </button>\r\n        </div>)\r\n    }\r\n\r\n     </form>\r\n    </div>\r\n\r\n   )\r\n\r\n}\r\nexport default FeesPaymentForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}