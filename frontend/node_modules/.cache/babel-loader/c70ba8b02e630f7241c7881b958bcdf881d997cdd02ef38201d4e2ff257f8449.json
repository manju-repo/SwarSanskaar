{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\pages\\\\Students.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport StudentList from '../components/StudentList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Students() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [searchItems, setSearchItems] = useState([]);\n  const [searchParams] = useSearchParams();\n  const query1 = searchParams.get('query1');\n  const {\n    branchId\n  } = useParams();\n  const fetchStudents = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/students`);\n      const {\n        students\n      } = await response.json();\n      console.log(students);\n      setStudents(students);\n      setFilteredStudents(students);\n      let currentStudents = students;\n      if (students && query1) {\n        const keywords = query1.split(/\\s+/);\n        currentStudents = currentStudents.filter(item => keywords.every(keyword => {\n          var _item$name;\n          return item === null || item === void 0 ? void 0 : (_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase().includes(keyword.toLowerCase());\n        }));\n      }\n      setFilteredStudents(currentStudents);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [branchId, query1]);\n  useEffect(() => {\n    fetchStudents();\n  }, [branchId, query1]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: students && /*#__PURE__*/_jsxDEV(StudentList, {\n      students: filteredStudents,\n      branchId: branchId,\n      updateStudentList: fetchStudents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n}\n_s(Students, \"KA/DcqBq5kzu+Z/7sJHQOGzMPOk=\", false, function () {\n  return [useSearchParams, useParams];\n});\n_c = Students;\n;\nexport default Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["useEffect","useState","useCallback","useParams","useSearchParams","StudentList","jsxDEV","_jsxDEV","Fragment","_Fragment","Students","_s","students","setStudents","filteredStudents","setFilteredStudents","searchItems","setSearchItems","searchParams","query1","get","branchId","fetchStudents","response","fetch","json","console","log","currentStudents","keywords","split","filter","item","every","keyword","_item$name","name","toLowerCase","includes","error","message","children","updateStudentList","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/pages/Students.js"],"sourcesContent":["import { useEffect, useState, useCallback} from 'react';\r\nimport {useParams, useSearchParams} from 'react-router-dom';\r\nimport StudentList from '../components/StudentList';\r\n\r\nfunction Students() {\r\n    const [students, setStudents] = useState([]);\r\n    const [filteredStudents, setFilteredStudents] = useState([]);\r\n\r\n    const [searchItems,setSearchItems] =useState([]);\r\n    const [searchParams] = useSearchParams();\r\n    const query1 = searchParams.get('query1');\r\n    const {branchId} = useParams();\r\n\r\n    const fetchStudents=useCallback(async()=>{\r\n        try{\r\n\r\n            const response = await fetch(`http://localhost:5000/students`);\r\n            const {students} = await response.json();\r\n            console.log(students);\r\n            setStudents(students);\r\n            setFilteredStudents(students);\r\n\r\n            let currentStudents = students;\r\n\r\n\r\n            if(students && query1){\r\n                const keywords = query1.split(/\\s+/);\r\n                currentStudents = currentStudents.filter(item =>\r\n                keywords.every(keyword => item?.name?.toLowerCase().includes(keyword.toLowerCase()))\r\n                );\r\n            }\r\n            setFilteredStudents(currentStudents);\r\n          }catch(error){\r\n            console.log(error.message);\r\n           }\r\n        },[branchId, query1]);\r\n\r\n    useEffect(() => {\r\n        fetchStudents();\r\n  },[branchId, query1]);\r\n\r\n\r\n\r\n\r\n    return (\r\n    <>{students && <StudentList students={filteredStudents} branchId={branchId} updateStudentList={fetchStudents}/>}</>);\r\n  };\r\n\r\n    export default Students;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AACvD,SAAQC,SAAS,EAAEC,eAAe,QAAO,kBAAkB;AAC3D,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAM,CAACe,WAAW,EAACC,cAAc,CAAC,GAAEhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,YAAY,CAAC,GAAGd,eAAe,CAAC,CAAC;EACxC,MAAMe,MAAM,GAAGD,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC;EACzC,MAAM;IAACC;EAAQ,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAE9B,MAAMmB,aAAa,GAACpB,WAAW,CAAC,YAAS;IACrC,IAAG;MAEC,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,MAAM;QAACZ;MAAQ,CAAC,GAAG,MAAMW,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxCC,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;MACrBC,WAAW,CAACD,QAAQ,CAAC;MACrBG,mBAAmB,CAACH,QAAQ,CAAC;MAE7B,IAAIgB,eAAe,GAAGhB,QAAQ;MAG9B,IAAGA,QAAQ,IAAIO,MAAM,EAAC;QAClB,MAAMU,QAAQ,GAAGV,MAAM,CAACW,KAAK,CAAC,KAAK,CAAC;QACpCF,eAAe,GAAGA,eAAe,CAACG,MAAM,CAACC,IAAI,IAC7CH,QAAQ,CAACI,KAAK,CAACC,OAAO;UAAA,IAAAC,UAAA;UAAA,OAAIH,IAAI,aAAJA,IAAI,wBAAAG,UAAA,GAAJH,IAAI,CAAEI,IAAI,cAAAD,UAAA,uBAAVA,UAAA,CAAYE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACJ,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC;QAAA,EACnF,CAAC;MACL;MACAtB,mBAAmB,CAACa,eAAe,CAAC;IACtC,CAAC,QAAMW,KAAK,EAAC;MACXb,OAAO,CAACC,GAAG,CAACY,KAAK,CAACC,OAAO,CAAC;IAC3B;EACH,CAAC,EAAC,CAACnB,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAEzBnB,SAAS,CAAC,MAAM;IACZsB,aAAa,CAAC,CAAC;EACrB,CAAC,EAAC,CAACD,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAKnB,oBACAZ,OAAA,CAAAE,SAAA;IAAAgC,QAAA,EAAG7B,QAAQ,iBAAIL,OAAA,CAACF,WAAW;MAACO,QAAQ,EAAEE,gBAAiB;MAACO,QAAQ,EAAEA,QAAS;MAACqB,iBAAiB,EAAEpB;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAAG,CAAC;AACrH;AAACnC,EAAA,CA1CMD,QAAQ;EAAA,QAKUN,eAAe,EAEnBD,SAAS;AAAA;AAAA4C,EAAA,GAPvBrC,QAAQ;AA0Cd;AAEC,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}