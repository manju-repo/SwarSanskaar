{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\FeesPaymentForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigate } from 'react-router-dom';\nimport { useLocation, useParams, NavLink } from 'react-router-dom';\nimport { useForm, setValue } from 'react-hook-form';\nimport classes from './RegistrationForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeesPaymentForm = () => {\n  _s();\n  var _formData$address;\n  const [branches, setBranches] = useState([]); // State to hold branch names\n  const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\n  const [students, setStudents] = useState([]); // State to hold student names\n  const [selectedStudent, setSelectedStudent] = useState(null); // State to store selected studentId\n  const [studentName, setStudentName] = useState(''); //state to hold student name in case of parameter studentId\n  const [branchName, setBranchName] = useState(''); //state to hold branch name in case of parameter studentId\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [monthNumber, setMonthNumber] = useState(null);\n  const [amountDue, setAmountDue] = useState(null);\n  const [amountPaid, setAmountPaid] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [paymentDate, setPaymentDate] = useState(null);\n  const [refresh, setRefresh] = useState(false); // State to trigger re-fetch and re-render component\n  const [waivingFees, setWaivingFees] = useState(false);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: [],\n    monthly_fees: '',\n    payments: [],\n    reminder_enabled: null\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const {\n    studentId\n  } = useParams();\n  const location = useLocation();\n  const isReminder = location.pathname === '/feesPayment/reminder';\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBranchStudents = async () => {\n      if (selectedBranch === '0') {\n        fetchStudents();\n      }\n      if (selectedBranch) {\n        try {\n          const response = await fetch(`http://localhost:5000/students/branch/${selectedBranch}`);\n          const {\n            students\n          } = await response.json();\n          setStudents(students);\n        } catch (error) {\n          console.error('Error fetching branch students:', error);\n        }\n      }\n    };\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/students`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          students\n        } = await response.json();\n        console.log(students);\n        setStudents(students);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    const fetchStudent = async student_id => {\n      try {\n        const response = await fetch(`http://localhost:5000/students/${student_id}`);\n        const {\n          student\n        } = await response.json();\n        console.log(student === null || student === void 0 ? void 0 : student.reminder_enabled);\n        if (student) {\n          setFormData({\n            name: student.name,\n            email: student.email,\n            phone: student.phone,\n            address: student.address,\n            monthly_fees: student.monthly_fees,\n            payments: student.payments,\n            reminder_enabled: student.reminder_enabled\n          });\n          if (monthNumber) {\n            setSelectedMonth(selectedMonth);\n            const paymentData = student.payments[monthNumber - 1]; // Adjusting for zero-based index\n            console.log(paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_due);\n            setAmountDue((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_due) || 0);\n            setAmountPaid((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_paid) || 0);\n          }\n          if (student !== null && student !== void 0 && student.branch_id) {\n            const branchResp = await fetch(`http://localhost:5000/branches/${student.branch_id}`);\n            const {\n              branch\n            } = await branchResp.json();\n            setBranchName(branch === null || branch === void 0 ? void 0 : branch.branch_name);\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              branch: branch === null || branch === void 0 ? void 0 : branch.branch_name\n            }));\n          }\n        }\n        setRefresh(false);\n        setWaivingFees(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (studentId || selectedStudent) fetchStudent(studentId || selectedStudent);else {\n      fetchBranches();\n      //fetchStudents();\n      if (selectedBranch) fetchBranchStudents();else setStudents(null);\n    }\n  }, [studentId, selectedBranch, refresh]);\n  const submitHandler = async data => {\n    console.log(data);\n    let response;\n    data.studentId = studentId || selectedStudent;\n    if (isReminder) {\n      const response = await fetch(`http://localhost:5000/students/reminder/${data.studentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      console.log(response);\n      const resp = await response.json();\n      alert(resp.message);\n      navigate('/students');\n    } else {\n      data.monthNumber = monthNumber;\n      data.mode = selectedMode;\n      data.paymentDate = paymentDate;\n      console.log(data);\n      response = await fetch(`http://localhost:5000/payment/fees`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      console.log(response);\n      if (response.ok) alert('Fees Updated');\n      navigate('/students');\n    }\n  };\n  const resetHandler = event => {\n    if (!selectedStudent && !studentId) navigate(`/homepage`);else {\n      setSelectedStudent(null);\n      navigate(`/feesPayment`);\n    }\n  };\n  const handleBranchChange = async event => {\n    setSelectedBranch(event.target.value); // Set selected branchId\n    console.log(selectedBranch);\n  };\n  const handleStudentChange = event => {\n    event.preventDefault();\n    setSelectedStudent(event.target.value); // Set selected studentId\n    //if(selectedStudent)\n    if (isReminder) navigate(`/feesPayment/reminder`);else navigate(`/feesPayment/${event.target.value}`);\n  };\n  const setMonthData = monthIndex => {\n    const paymentData = formData.payments[monthIndex - 1]; // Adjusting for zero-based index\n\n    //setMonthNumber(monthIndex);\n    //setSelectedMonth(paymentData?.month || \"\"); // Replace with actual month if available\n    setAmountDue((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_due) || 0);\n    setAmountPaid((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_paid) || 0);\n  };\n  const handleMonthChange = event => {\n    var _formData$payments, _formData$payments2, _formData$payments3;\n    setMonthNumber(event.target.selectedIndex);\n    setSelectedMonth(event.target.value);\n    console.log((_formData$payments = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments === void 0 ? void 0 : _formData$payments.amount_due);\n    setAmountDue((_formData$payments2 = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments2 === void 0 ? void 0 : _formData$payments2.amount_due);\n    setAmountPaid((_formData$payments3 = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments3 === void 0 ? void 0 : _formData$payments3.amount_paid);\n  };\n  const handleModeChange = event => {\n    setSelectedMode(event.target.value); // Set selected Mode\n  };\n  const handleDateChange = event => {\n    setPaymentDate(event.target.value);\n  };\n  const waiveFeesHAndler = async event => {\n    setWaivingFees(true);\n    const waiveyn = window.confirm(`Waive off fees of Rs.${amountDue}/- for ${selectedMonth}`);\n    if (!waiveyn) return;\n    const student_id = studentId || selectedStudent;\n    //const month=monthNumber+1;\n    const response = await fetch(`http://localhost:5000/students/waivefees`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        studentId: student_id,\n        month: monthNumber\n      })\n    });\n    console.log(response);\n    if (response.ok) {\n      alert(`Waived off fees for ${selectedMonth}`);\n      setRefresh(true);\n    }\n  };\n  const reminderHandler = async () => {\n    try {\n      const new_reminder_enabled = !formData.reminder_enabled;\n      const student_id = studentId || selectedStudent;\n      const response = await fetch(`http://localhost:5000/students/togReminder/${student_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reminder_enabled: new_reminder_enabled\n        })\n      });\n      if (response.ok) {\n        setRefresh(true);\n      }\n    } catch (err) {\n      console.error('Failed to update reminder status:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submitHandler),\n        className: classes.form,\n        style: {\n          border: '2px solid grey'\n        },\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: studentId || selectedStudent ? isReminder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '100px',\n                width: '100%',\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"notificationMsg\",\n                style: {\n                  display: 'block',\n                  minWidth: '200px',\n                  marginLeft: '50px',\n                  justifyContent: 'center'\n                },\n                children: \" Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                style: {\n                  overflowY: 'auto'\n                },\n                id: \"notificationMsg\",\n                type: \"text\",\n                name: \"notificationMsg\",\n                rows: \"4\",\n                ...register(\"notificationMsg\", {\n                  required: \"Enter the Message\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), errors.notificationMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.errorMsg,\n                children: errors.notificationMsg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '100px',\n                marginBottom: '50px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginRight: '10px'\n                },\n                className: classes.button,\n                onClick: resetHandler,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: classes.button,\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.control,\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                border: '2px solid grey'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'left',\n                  marginTop: '20px',\n                  marginLeft: '25px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: [\"Email:  \", formData.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: [\"Phone:  \", formData.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: [\"Monthly Fees: Rs. \", formData.monthly_fees]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%',\n                  textAlign: 'left',\n                  fontSize: '20px',\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formData.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"right\",\n                  marginRight: '25px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: [\"Branch:    \", formData.branch]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    fontSize: \"16px\",\n                    fontFamily: \"inherit\",\n                    textAlign: 'left'\n                  },\n                  children: [\"Address:   \", (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.join('\\n')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '40px',\n                  marginLeft: '100px',\n                  marginRight: '70px',\n                  marginBottom: '50px',\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    minWidth: '150px',\n                    display: 'inline-block'\n                  },\n                  htmlFor: \"mode\",\n                  children: \"Payment for:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"month\",\n                  name: \"month\",\n                  ...register(\"month\", {\n                    required: true\n                  }),\n                  value: selectedMonth,\n                  onChange: handleMonthChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 17\n                  }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: month,\n                    children: month\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 17\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 15\n                }, this), errors.month && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"errorMsg\",\n                  children: \"Please select the Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 8\n              }, this), selectedMonth && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '30%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Amount Due: Rs. \", amountDue, \"/-\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '30%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Amount Paid: Rs. \", amountPaid, \"/-\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 10\n                }, this), amountDue > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '30%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      fontSize: '12px',\n                      marginTop: '20px'\n                    },\n                    onClick: waiveFeesHAndler,\n                    children: \"Waive Fees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"monthNumber\"),\n              value: monthNumber || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 9\n            }, this), selectedMonth ? amountDue !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  fontSize: '20px',\n                  fontWeight: 'bold',\n                  marginTop: '5px',\n                  marginBottom: '5px'\n                },\n                children: \"Please enter Payment Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100%',\n                  height: '40%',\n                  paddingTop: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: '100px',\n                    marginRight: '70px',\n                    marginBottom: '50px',\n                    textAlign: 'left'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      minWidth: '150px',\n                      display: 'inline-block'\n                    },\n                    htmlFor: \"paymentDate\",\n                    children: \"Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    style: {\n                      width: '150px',\n                      height: '25px'\n                    },\n                    type: \"date\",\n                    id: \"paymentDate\",\n                    ...register(\"paymentDate\", {\n                      required: true\n                    }),\n                    name: \"paymentDate\",\n                    value: paymentDate,\n                    onChange: handleDateChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 15\n                  }, this), !waivingFees && errors.paymentDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"errorMsg\",\n                    children: \"Select Date of Payment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 52\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: '100px',\n                    marginRight: '70px',\n                    marginBottom: '50px',\n                    textAlign: 'left'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      minWidth: '150px',\n                      display: 'inline-block'\n                    },\n                    htmlFor: \"amount\",\n                    children: \"Amount:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 15\n                  }, this), \"Rs \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    style: {\n                      width: '50px',\n                      height: '15px'\n                    },\n                    type: \"text\",\n                    id: \"amount\",\n                    ...register(\"amount\", {\n                      required: \"Enter Amount\",\n                      validate: {\n                        notZero: value => Number(value) > 0 || \"Amount must be greater than zero\",\n                        isNumber: value => !isNaN(value) || \"Amount must be a valid number\"\n                      }\n                    }),\n                    name: \"amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 18\n                  }, this), !waivingFees && errors.amount && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"errorMsg\",\n                    children: errors.amount.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: '100px',\n                    marginRight: '70px',\n                    marginBottom: '50px',\n                    textAlign: 'left'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      minWidth: '150px',\n                      display: 'inline-block'\n                    },\n                    htmlFor: \"mode\",\n                    children: \"Mode of Payment:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"mode\",\n                    ...register(\"mode\", {\n                      required: true\n                    }),\n                    name: \"mode\",\n                    value: selectedMode,\n                    onChange: handleModeChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Mode\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"cash\",\n                      children: \"Cash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"upi\",\n                      children: \"UPI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"card\",\n                      children: \"Card\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 14\n                  }, this), !waivingFees && errors.mode && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"errorMsg\",\n                    children: \"Select Mode of Payment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No Dues for this month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Please select the month for payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              marginTop: '50px',\n              marginBottom: '50px',\n              marginLeft: '100px',\n              width: '80%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.control,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  width: '100px'\n                },\n                htmlFor: \"branch\",\n                children: \"Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"branch\",\n                name: \"branch\",\n                value: selectedBranch,\n                onChange: handleBranchChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a Branch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"All Branches\"\n                }, '0', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 13\n                }, this), branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: branch._id,\n                  children: branch.branch_name\n                }, branch._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 15\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 11\n              }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: errors.branch.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.control,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  width: '100px'\n                },\n                htmlFor: \"student\",\n                children: \"Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"student\",\n                name: \"student\",\n                value: selectedStudent,\n                onChange: handleStudentChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 13\n                }, this), students && students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: student._id,\n                  children: student.name\n                }, student._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 15\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 11\n              }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: errors.student.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 9\n          }, this)\n        }, void 0, false), selectedMonth && amountDue !== 0 && (studentId || selectedStudent) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '100px',\n            marginBottom: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginRight: '10px'\n            },\n            className: classes.button,\n            onClick: resetHandler,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.button,\n            type: \"submit\",\n            children: isSubmitting ? 'Submitting' : 'Proceed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: '30px',\n            marginBottom: '30px',\n            marginRight: '10px',\n            marginLeft: '10px'\n          },\n          children: !isReminder && (studentId || selectedStudent) && (formData.reminder_enabled ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                style: {\n                  textDecoration: 'none'\n                },\n                onClick: reminderHandler,\n                children: \"Disable Reminders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                style: {\n                  textDecoration: 'none'\n                },\n                to: `/feesPayment/reminder/${selectedStudent || nstudentId}`,\n                children: \"Send Reminder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              style: {\n                textDecoration: 'none'\n              },\n              onClick: reminderHandler,\n              children: \"Enable Reminders \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right',\n        marginRight: '150px'\n      },\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textDecoration: 'none'\n        },\n        onClick: resetHandler,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(FeesPaymentForm, \"hrcz59eQJyxrhRGd40l6E0PP8mA=\", false, function () {\n  return [useForm, useParams, useLocation, useNavigate];\n});\n_c = FeesPaymentForm;\nexport default FeesPaymentForm;\nvar _c;\n$RefreshReg$(_c, \"FeesPaymentForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigate","useLocation","useParams","NavLink","useForm","setValue","classes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeesPaymentForm","_s","_formData$address","branches","setBranches","selectedBranch","setSelectedBranch","students","setStudents","selectedStudent","setSelectedStudent","studentName","setStudentName","branchName","setBranchName","selectedMonth","setSelectedMonth","monthNumber","setMonthNumber","amountDue","setAmountDue","amountPaid","setAmountPaid","amount","setAmount","selectedMode","setSelectedMode","paymentDate","setPaymentDate","refresh","setRefresh","waivingFees","setWaivingFees","months","formData","setFormData","name","email","phone","address","monthly_fees","payments","reminder_enabled","register","handleSubmit","formState","errors","isSubmitting","reset","studentId","location","isReminder","pathname","navigate","fetchBranchStudents","fetchStudents","response","fetch","json","error","console","fetchBranches","data","log","method","headers","fetchStudent","student_id","student","paymentData","amount_due","amount_paid","branch_id","branchResp","branch","branch_name","prevFormData","submitHandler","body","JSON","stringify","resp","alert","message","mode","ok","resetHandler","event","handleBranchChange","target","value","handleStudentChange","preventDefault","setMonthData","monthIndex","handleMonthChange","_formData$payments","_formData$payments2","_formData$payments3","selectedIndex","handleModeChange","handleDateChange","waiveFeesHAndler","waiveyn","window","confirm","month","reminderHandler","new_reminder_enabled","err","children","className","container","onSubmit","form","style","border","marginTop","width","display","htmlFor","minWidth","marginLeft","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","id","type","rows","required","notificationMsg","errorMsg","marginBottom","marginRight","button","onClick","control","textAlign","fontSize","fontWeight","fontFamily","join","onChange","map","index","height","paddingTop","validate","notZero","Number","isNumber","isNaN","_id","textDecoration","to","nstudentId","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/FeesPaymentForm.js"],"sourcesContent":["\r\nimport {\r\n  Form,\r\n  Link,\r\n  useSearchParams,\r\n  useActionData,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport {useLocation, useParams, NavLink} from 'react-router-dom';\r\nimport { useForm, setValue } from 'react-hook-form';\r\nimport classes from './RegistrationForm.module.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst FeesPaymentForm=()=>{\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n    const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\r\n    const [students, setStudents] = useState([]); // State to hold student names\r\n    const [selectedStudent, setSelectedStudent] = useState(null); // State to store selected studentId\r\n    const [studentName,setStudentName]=useState('');    //state to hold student name in case of parameter studentId\r\n    const [branchName, setBranchName]=useState('');     //state to hold branch name in case of parameter studentId\r\n    const [selectedMonth, setSelectedMonth] = useState(null);\r\n    const [monthNumber, setMonthNumber] = useState(null);\r\n    const [amountDue, setAmountDue]=useState(null);\r\n    const [amountPaid, setAmountPaid]=useState(null);\r\n    const [amount, setAmount]=useState(null);\r\n    const [selectedMode, setSelectedMode]=useState(null);\r\n    const [paymentDate, setPaymentDate]=useState(null);\r\n    const [refresh, setRefresh] = useState(false); // State to trigger re-fetch and re-render component\r\n    const [waivingFees, setWaivingFees] =useState(false);\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n    const [formData, setFormData] = useState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          address: [],\r\n          monthly_fees: '',\r\n          payments:[],\r\n          reminder_enabled:null\r\n        });\r\n\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset\r\n  } = useForm();\r\n\r\n    const { studentId } = useParams();\r\n    const location = useLocation();\r\n    const isReminder = location.pathname === '/feesPayment/reminder';\r\n    const navigate= useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchBranchStudents = async() =>{\r\n        if(selectedBranch==='0'){\r\n            fetchStudents();\r\n        }\r\n        if (selectedBranch) {\r\n            try{\r\n                const response=await fetch(`http://localhost:5000/students/branch/${selectedBranch}`);\r\n                const {students} =await response.json();\r\n                setStudents(students);\r\n            }\r\n            catch (error) {\r\n                console.error('Error fetching branch students:', error);\r\n            }\r\n         }\r\n       }\r\n\r\n      const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n\r\n    const fetchStudents=async()=>{\r\n      try{\r\n           const response=await fetch(`http://localhost:5000/students`,{\r\n                 method:'GET',\r\n                 headers:{\r\n                     'Content-Type':'application/json',\r\n                     }\r\n                 });\r\n\r\n           const {students}=await response.json();\r\n           console.log(students);\r\n           setStudents(students);\r\n       }\r\n       catch(error){\r\n        console.error('Error fetching students:', error);\r\n       }\r\n      };\r\n\r\n      const fetchStudent=async(student_id)=>{\r\n            try{\r\n                 const response=await fetch(`http://localhost:5000/students/${student_id}`);\r\n                 const {student}=await response.json();\r\n                 console.log(student?.reminder_enabled);\r\n                 if(student){\r\n                    setFormData({\r\n                            name: student.name,\r\n                            email: student.email,\r\n                            phone: student.phone,\r\n                            address: student.address,\r\n                            monthly_fees: student.monthly_fees,\r\n                            payments: student.payments,\r\n                            reminder_enabled: student.reminder_enabled\r\n                          });\r\n                if(monthNumber){\r\n                    setSelectedMonth(selectedMonth);\r\n                    const paymentData = student.payments[monthNumber - 1]; // Adjusting for zero-based index\r\n                    console.log(paymentData?.amount_due);\r\n                    setAmountDue(paymentData?.amount_due || 0);\r\n                    setAmountPaid(paymentData?.amount_paid || 0);\r\n                 }\r\n                 if (student?.branch_id) {\r\n                    const branchResp=await fetch(`http://localhost:5000/branches/${student.branch_id}`);\r\n                    const {branch}=await branchResp.json();\r\n                    setBranchName(branch?.branch_name);\r\n\r\n                    setFormData((prevFormData) => ({\r\n                      ...prevFormData,\r\n                      branch: branch?.branch_name\r\n                    }));\r\n                 }\r\n\r\n             }\r\n             setRefresh(false);\r\n             setWaivingFees(false);\r\n             }\r\n             catch(error){\r\n                 console.log(error);\r\n             }\r\n\r\n       };\r\n      if (studentId || selectedStudent)\r\n         fetchStudent(studentId||selectedStudent);\r\n      else{\r\n          fetchBranches();\r\n          //fetchStudents();\r\n          if(selectedBranch) fetchBranchStudents()\r\n          else setStudents(null);\r\n      }\r\n\r\n    }, [studentId, selectedBranch, refresh]);\r\n\r\n\r\n\r\n  const submitHandler =async (data) => {\r\n      console.log(data);\r\n    let response;\r\n    data.studentId = studentId || selectedStudent;\r\n    if(isReminder){\r\n        const response= await fetch(`http://localhost:5000/students/reminder/${data.studentId}`, {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n       });\r\n\r\n        console.log(response);\r\n        const resp=await response.json();\r\n        alert(resp.message);\r\n\r\n        navigate('/students');\r\n    }\r\n    else{\r\n        data.monthNumber = monthNumber;\r\n        data.mode=selectedMode;\r\n        data.paymentDate=paymentDate;\r\n\r\n        console.log(data);\r\n          response= await fetch(`http://localhost:5000/payment/fees`, {\r\n          method: 'PUT',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify(data)\r\n         });\r\n\r\n          console.log(response);\r\n          if(response.ok)\r\n            alert('Fees Updated');\r\n          navigate('/students');\r\n     }\r\n  };\r\n\r\n\r\n   const resetHandler=(event)=>{\r\n    if(!selectedStudent && !studentId)\r\n        navigate(`/homepage`);\r\n    else{\r\n        setSelectedStudent(null);\r\n        navigate(`/feesPayment`);\r\n    }\r\n   };\r\n\r\n\r\n    const handleBranchChange = async(event) => {\r\n         setSelectedBranch(event.target.value); // Set selected branchId\r\n         console.log(selectedBranch);\r\n    };\r\n\r\n    const handleStudentChange = (event) => {\r\n         event.preventDefault();\r\n         setSelectedStudent(event.target.value); // Set selected studentId\r\n         //if(selectedStudent)\r\n         if(isReminder)\r\n            navigate(`/feesPayment/reminder`);\r\n        else\r\n        navigate(`/feesPayment/${event.target.value}`);\r\n    };\r\n\r\n    const setMonthData = (monthIndex) => {\r\n        const paymentData = formData.payments[monthIndex - 1]; // Adjusting for zero-based index\r\n\r\n        //setMonthNumber(monthIndex);\r\n        //setSelectedMonth(paymentData?.month || \"\"); // Replace with actual month if available\r\n        setAmountDue(paymentData?.amount_due || 0);\r\n        setAmountPaid(paymentData?.amount_paid || 0);\r\n    };\r\n\r\n    const handleMonthChange = (event) => {\r\n        setMonthNumber(event.target.selectedIndex);\r\n        setSelectedMonth(event.target.value);\r\n        console.log(formData.payments[event.target.selectedIndex-1]?.amount_due);\r\n        setAmountDue(formData.payments[event.target.selectedIndex-1]?.amount_due);\r\n        setAmountPaid(formData.payments[event.target.selectedIndex-1]?.amount_paid);\r\n    };\r\n\r\n    const handleModeChange = (event) => {\r\n        setSelectedMode(event.target.value); // Set selected Mode\r\n    };\r\n\r\n    const handleDateChange = (event) => {\r\n        setPaymentDate(event.target.value);\r\n     };\r\n\r\n    const waiveFeesHAndler = async(event) => {\r\n        setWaivingFees(true);\r\n        const waiveyn=window.confirm(`Waive off fees of Rs.${amountDue}/- for ${selectedMonth}`);\r\n        if(!waiveyn) return;\r\n        const student_id=studentId || selectedStudent;\r\n        //const month=monthNumber+1;\r\n        const response=await fetch(`http://localhost:5000/students/waivefees`,{\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({studentId:student_id,month:monthNumber})\r\n        });\r\n        console.log(response);\r\n        if(response.ok){\r\n            alert(`Waived off fees for ${selectedMonth}`);\r\n            setRefresh(true);\r\n        }\r\n    };\r\n\r\n    const reminderHandler=async()=>{\r\n      try{\r\n        const new_reminder_enabled=!formData.reminder_enabled;\r\n        const student_id=studentId || selectedStudent;\r\n        const response= await fetch(`http://localhost:5000/students/togReminder/${student_id}`, {\r\n          method: 'PUT',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({reminder_enabled:new_reminder_enabled})\r\n        });\r\n        if(response.ok){\r\n            setRefresh(true);\r\n        }\r\n      }\r\n      catch (err) {\r\n          console.error('Failed to update reminder status:', err);\r\n      }\r\n    }\r\n\r\n   return (<>\r\n     <div className={classes.container}>\r\n\r\n     <form onSubmit={handleSubmit(submitHandler)} className={classes.form} style={{ border:'2px solid grey'}}>\r\n     <>\r\n\r\n     {(studentId || selectedStudent) ? (\r\n        isReminder?(<>\r\n            <div style={{marginTop:'100px',width:'100%', display:'flex'}}>\r\n                <label htmlFor=\"notificationMsg\" style={{display:'block',minWidth:'200px',marginLeft:'50px',justifyContent:'center'}}> Message</label>\r\n                <textarea  style={{overflowY:'auto'}} id=\"notificationMsg\" type=\"text\" name=\"notificationMsg\" rows=\"4\"\r\n                {...register(\"notificationMsg\", {\r\n                      required: \"Enter the Message\",\r\n                    })}\r\n                />\r\n                {errors.notificationMsg && <p className={classes.errorMsg}>{errors.notificationMsg.message}</p>}\r\n            </div>\r\n            <div style={{marginTop:'100px', marginBottom:'50px'}}>\r\n             <button style={{ marginRight:'10px'}} className={classes.button}  onClick={resetHandler}>\r\n               Cancel\r\n             </button>\r\n             <button className={classes.button} type=\"submit\" >\r\n               Send\r\n             </button>\r\n\r\n            </div>\r\n        </>):(<>\r\n\r\n        <div className={classes.control} style={{ display: \"flex\", justifyContent: \"space-between\",  border:'2px solid grey'}}>\r\n            <div style={{width:'25%', textAlign:'left', marginTop:'20px', marginLeft:'25px'}} >\r\n                <div style={{textAlign:'left'}}>Email:  {formData.email}</div>\r\n                <div style={{textAlign:'left'}}>Phone:  {formData.phone}</div>\r\n                <div style={{textAlign:'left'}}>Monthly Fees: Rs. {formData.monthly_fees}</div>\r\n\r\n            </div>\r\n            <div style={{width:'30%',textAlign:'left',fontSize:'20px',fontWeight:'bold'}}>\r\n                       <p>{formData.name}</p>\r\n                     </div>\r\n            <div style={{textAlign: \"right\", marginRight:'25px'}} >\r\n                <div  style={{textAlign:'left'}}>Branch:    {formData.branch}</div>\r\n                <pre style={{ fontSize: \"16px\", fontFamily: \"inherit\",  textAlign:'left' }}>Address:   {formData.address?.join('\\n')}</pre>\r\n            </div>\r\n        </div>\r\n\r\n        <div style={{width:'100%', display:'flex'}}>\r\n       <div style={{marginTop:'40px', marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n                     <label style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"mode\">Payment for:</label>\r\n              <select\r\n                id=\"month\"\r\n                name=\"month\"\r\n                {...register(\"month\", { required: true })}\r\n                value={selectedMonth} onChange={handleMonthChange}>\r\n\r\n                <option value=\"\">Select Month</option>\r\n                {months.map((month, index) => (\r\n                <option key={index} value={month}>\r\n                  {month}\r\n                </option>\r\n              ))}\r\n             </select>\r\n            {errors.month && <p className=\"errorMsg\">Please select the Month</p>}\r\n\r\n         </div>\r\n        {selectedMonth && (<>\r\n         <div style={{width:'30%'}}>\r\n            <p>Amount Due: Rs. {amountDue}/-</p>\r\n         </div>\r\n         <div style={{width:'30%'}}>\r\n            <p>Amount Paid: Rs. {amountPaid}/-</p>\r\n         </div>\r\n         {amountDue>0 && <div style={{width:'30%'}}>\r\n            <button style={{fontSize:'12px', marginTop:'20px'}} onClick={waiveFeesHAndler}>Waive Fees</button>\r\n         </div>}\r\n         </>)}\r\n        </div>\r\n        <input type=\"hidden\" {...register(\"monthNumber\")} value={monthNumber || ''} />\r\n        <hr/>\r\n        {selectedMonth ? (amountDue!==0) ? (<>\r\n        <div style={{textAlign:'center', fontSize:'20px', fontWeight:'bold', marginTop:'5px', marginBottom:'5px'}}>\r\n        Please enter Payment Details</div>\r\n        <div style={{width:'100%', height:'40%',paddingTop:'20px'}}>\r\n               <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"paymentDate\">Date:</label>\r\n              <input\r\n                  style={{ width: '150px', height: '25px' }}\r\n                  type=\"date\"\r\n                  id=\"paymentDate\"\r\n                  {...register(\"paymentDate\", { required: true })}\r\n                  name=\"paymentDate\"\r\n                  value={paymentDate}\r\n                  onChange={handleDateChange}\r\n                  />\r\n            {!waivingFees && errors.paymentDate && <p className=\"errorMsg\">Select Date of Payment</p>}\r\n\r\n              </div>\r\n              <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"amount\">Amount:</label>\r\n              Rs <input style={{width:'50px',height:'15px'}} type=\"text\" id=\"amount\"\r\n              {...register(\"amount\", { required: \"Enter Amount\",\r\n               validate: {\r\n                       notZero: (value) => Number(value) > 0 || \"Amount must be greater than zero\",\r\n                       isNumber: (value) => !isNaN(value) || \"Amount must be a valid number\",\r\n                     }\r\n               })}\r\n              name=\"amount\"/>\r\n            {!waivingFees && errors.amount && <p className=\"errorMsg\">{errors.amount.message}</p>}\r\n\r\n              </div>\r\n              <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"mode\">Mode of Payment:</label>\r\n             <select\r\n                id=\"mode\"\r\n                {...register(\"mode\", { required: true })}\r\n                name=\"mode\" value={selectedMode} onChange={handleModeChange}>\r\n\r\n                <option value=\"\">Select Mode</option>\r\n                  <option  value=\"cash\">\r\n                    Cash\r\n                  </option>\r\n                  <option  value=\"upi\">\r\n                   UPI\r\n                  </option>\r\n                  <option  value=\"card\">\r\n                    Card\r\n                  </option>\r\n              </select>\r\n            {!waivingFees && errors.mode && <p className=\"errorMsg\">Select Mode of Payment</p>}\r\n              </div>\r\n        </div>\r\n        </>\r\n        ):\r\n        <div>No Dues for this month</div>:<div>Please select the month for payment</div>\r\n        }\r\n        </>)\r\n      ):(\r\n        <div style={{display:'flex', marginTop:'50px',marginBottom:'50px', marginLeft:'100px', width:'80%'}}>\r\n        <div className={classes.control}>\r\n          <label style={{width:'100px'}} htmlFor=\"branch\">Branch</label>\r\n          <select\r\n            id=\"branch\"\r\n            name=\"branch\" value={selectedBranch} onChange={handleBranchChange}>\r\n\r\n            <option value=\"\">Select a Branch</option>\r\n            <option key='0' value='0'>\r\n                All Branches\r\n             </option>\r\n            {branches && branches.map((branch) => (\r\n              <option key={branch._id} value={branch._id}>\r\n                {branch.branch_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label  style={{width:'100px'}} htmlFor=\"student\">Student</label>\r\n          <select\r\n            id=\"student\"\r\n            name=\"student\" value={selectedStudent} onChange={handleStudentChange}>\r\n\r\n            <option value=\"\">Select a Student</option>\r\n            {students && students.map((student) => (\r\n              <option key={student._id} value={student._id}>\r\n                {student.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          { errors.branch && <p className=\"errorMsg\">{errors.student.message}</p>}\r\n        </div>\r\n        </div>\r\n      )}\r\n      </>\r\n    {\r\n        (selectedMonth && amountDue!==0 && (studentId || selectedStudent)) &&\r\n       (<div style={{marginTop:'100px', marginBottom:'50px'}}>\r\n         <button style={{ marginRight:'10px'}} className={classes.button}  onClick={resetHandler}>\r\n           Cancel\r\n         </button>\r\n         <button className={classes.button} type=\"submit\" >\r\n           {isSubmitting? 'Submitting': 'Proceed'}\r\n         </button>\r\n\r\n        </div>)}\r\n\r\n\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\",\r\n    marginTop:'30px',marginBottom:'30px', marginRight:'10px', marginLeft:'10px'}}>\r\n\r\n        {!isReminder && (studentId || selectedStudent) && (formData.reminder_enabled ?\r\n             (<><div><NavLink style={{textDecoration:'none'}} onClick={reminderHandler}>\r\n                  Disable Reminders\r\n             </NavLink></div>\r\n             <div><NavLink style={{textDecoration:'none'}}\r\n                     to={`/feesPayment/reminder/${selectedStudent || nstudentId}`}>Send Reminder\r\n             </NavLink></div></>)\r\n            :\r\n                  <div><NavLink style={{textDecoration:'none'}}\r\n                  onClick={reminderHandler}>Enable Reminders </NavLink></div>\r\n\r\n        )}\r\n\r\n     </div>\r\n     </form>\r\n    </div>\r\n    <div style={{textAlign:'right',marginRight:'150px'}}>\r\n         <NavLink style={{textDecoration:'none'}} onClick={resetHandler}><span>Back</span></NavLink></div>\r\n   </>)\r\n\r\n}\r\nexport default FeesPaymentForm"],"mappings":";;AACA,SACEA,IAAI,EACJC,IAAI,EACJC,eAAe,EACfC,aAAa,EACbC,WAAW,QACN,kBAAkB;AACzB,SAAQC,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAO,kBAAkB;AAChE,SAASC,OAAO,EAAEC,QAAQ,QAAQ,iBAAiB;AACnD,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,eAAe,GAACA,CAAA,KAAI;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACiB,WAAW,EAACC,cAAc,CAAC,GAAClB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAI;EACpD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAACpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAK;EACpD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAC1B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAC5B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAC9B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAChC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAClC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAEtC,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAMuC,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;EAEC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC;IACnC0C,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAC,EAAE;IACXC,gBAAgB,EAAC;EACnB,CAAC,CAAC;EAEV,MAAM;IACFC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAa,CAAC;IACnCC;EACF,CAAC,GAAGzD,OAAO,CAAC,CAAC;EAEX,MAAM;IAAE0D;EAAU,CAAC,GAAG5D,SAAS,CAAC,CAAC;EACjC,MAAM6D,QAAQ,GAAG9D,WAAW,CAAC,CAAC;EAC9B,MAAM+D,UAAU,GAAGD,QAAQ,CAACE,QAAQ,KAAK,uBAAuB;EAChE,MAAMC,QAAQ,GAAElE,WAAW,CAAC,CAAC;EAE7BQ,SAAS,CAAC,MAAM;IAEZ,MAAM2D,mBAAmB,GAAG,MAAAA,CAAA,KAAU;MACtC,IAAGjD,cAAc,KAAG,GAAG,EAAC;QACpBkD,aAAa,CAAC,CAAC;MACnB;MACA,IAAIlD,cAAc,EAAE;QAChB,IAAG;UACC,MAAMmD,QAAQ,GAAC,MAAMC,KAAK,CAAC,yCAAyCpD,cAAc,EAAE,CAAC;UACrF,MAAM;YAACE;UAAQ,CAAC,GAAE,MAAMiD,QAAQ,CAACE,IAAI,CAAC,CAAC;UACvClD,WAAW,CAACD,QAAQ,CAAC;QACzB,CAAC,CACD,OAAOoD,KAAK,EAAE;UACVC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QAC3D;MACH;IACF,CAAC;IAEF,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAChE,MAAMK,IAAI,GAAG,MAAMN,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCE,OAAO,CAACG,GAAG,CAACD,IAAI,CAAC3D,QAAQ,CAAC;QAC1BC,WAAW,CAAC0D,IAAI,CAAC3D,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOwD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMJ,aAAa,GAAC,MAAAA,CAAA,KAAS;MAC3B,IAAG;QACE,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,gCAAgC,EAAC;UACtDO,MAAM,EAAC,KAAK;UACZC,OAAO,EAAC;YACJ,cAAc,EAAC;UACf;QACJ,CAAC,CAAC;QAER,MAAM;UAAC1D;QAAQ,CAAC,GAAC,MAAMiD,QAAQ,CAACE,IAAI,CAAC,CAAC;QACtCE,OAAO,CAACG,GAAG,CAACxD,QAAQ,CAAC;QACrBC,WAAW,CAACD,QAAQ,CAAC;MACzB,CAAC,CACD,OAAMoD,KAAK,EAAC;QACXC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACjD;IACD,CAAC;IAED,MAAMO,YAAY,GAAC,MAAMC,UAAU,IAAG;MAChC,IAAG;QACE,MAAMX,QAAQ,GAAC,MAAMC,KAAK,CAAC,kCAAkCU,UAAU,EAAE,CAAC;QAC1E,MAAM;UAACC;QAAO,CAAC,GAAC,MAAMZ,QAAQ,CAACE,IAAI,CAAC,CAAC;QACrCE,OAAO,CAACG,GAAG,CAACK,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE1B,gBAAgB,CAAC;QACtC,IAAG0B,OAAO,EAAC;UACRjC,WAAW,CAAC;YACJC,IAAI,EAAEgC,OAAO,CAAChC,IAAI;YAClBC,KAAK,EAAE+B,OAAO,CAAC/B,KAAK;YACpBC,KAAK,EAAE8B,OAAO,CAAC9B,KAAK;YACpBC,OAAO,EAAE6B,OAAO,CAAC7B,OAAO;YACxBC,YAAY,EAAE4B,OAAO,CAAC5B,YAAY;YAClCC,QAAQ,EAAE2B,OAAO,CAAC3B,QAAQ;YAC1BC,gBAAgB,EAAE0B,OAAO,CAAC1B;UAC5B,CAAC,CAAC;UACZ,IAAGzB,WAAW,EAAC;YACXD,gBAAgB,CAACD,aAAa,CAAC;YAC/B,MAAMsD,WAAW,GAAGD,OAAO,CAAC3B,QAAQ,CAACxB,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;YACvD2C,OAAO,CAACG,GAAG,CAACM,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,UAAU,CAAC;YACpClD,YAAY,CAAC,CAAAiD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,UAAU,KAAI,CAAC,CAAC;YAC1ChD,aAAa,CAAC,CAAA+C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,WAAW,KAAI,CAAC,CAAC;UAC/C;UACA,IAAIH,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEI,SAAS,EAAE;YACrB,MAAMC,UAAU,GAAC,MAAMhB,KAAK,CAAC,kCAAkCW,OAAO,CAACI,SAAS,EAAE,CAAC;YACnF,MAAM;cAACE;YAAM,CAAC,GAAC,MAAMD,UAAU,CAACf,IAAI,CAAC,CAAC;YACtC5C,aAAa,CAAC4D,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,WAAW,CAAC;YAElCxC,WAAW,CAAEyC,YAAY,KAAM;cAC7B,GAAGA,YAAY;cACfF,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC;YAClB,CAAC,CAAC,CAAC;UACN;QAEJ;QACA7C,UAAU,CAAC,KAAK,CAAC;QACjBE,cAAc,CAAC,KAAK,CAAC;MACrB,CAAC,CACD,OAAM2B,KAAK,EAAC;QACRC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;MACtB;IAEN,CAAC;IACF,IAAIV,SAAS,IAAIxC,eAAe,EAC7ByD,YAAY,CAACjB,SAAS,IAAExC,eAAe,CAAC,CAAC,KACxC;MACAoD,aAAa,CAAC,CAAC;MACf;MACA,IAAGxD,cAAc,EAAEiD,mBAAmB,CAAC,CAAC,MACnC9C,WAAW,CAAC,IAAI,CAAC;IAC1B;EAEF,CAAC,EAAE,CAACyC,SAAS,EAAE5C,cAAc,EAAEwB,OAAO,CAAC,CAAC;EAI1C,MAAMgD,aAAa,GAAE,MAAOf,IAAI,IAAK;IACjCF,OAAO,CAACG,GAAG,CAACD,IAAI,CAAC;IACnB,IAAIN,QAAQ;IACZM,IAAI,CAACb,SAAS,GAAGA,SAAS,IAAIxC,eAAe;IAC7C,IAAG0C,UAAU,EAAC;MACV,MAAMK,QAAQ,GAAE,MAAMC,KAAK,CAAC,2CAA2CK,IAAI,CAACb,SAAS,EAAE,EAAE;QACzFe,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7Ca,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,IAAI;MAC1B,CAAC,CAAC;MAEDF,OAAO,CAACG,GAAG,CAACP,QAAQ,CAAC;MACrB,MAAMyB,IAAI,GAAC,MAAMzB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAChCwB,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC;MAEnB9B,QAAQ,CAAC,WAAW,CAAC;IACzB,CAAC,MACG;MACAS,IAAI,CAAC7C,WAAW,GAAGA,WAAW;MAC9B6C,IAAI,CAACsB,IAAI,GAAC3D,YAAY;MACtBqC,IAAI,CAACnC,WAAW,GAACA,WAAW;MAE5BiC,OAAO,CAACG,GAAG,CAACD,IAAI,CAAC;MACfN,QAAQ,GAAE,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC5DO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7Ca,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,IAAI;MAC1B,CAAC,CAAC;MAEDF,OAAO,CAACG,GAAG,CAACP,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAAC6B,EAAE,EACZH,KAAK,CAAC,cAAc,CAAC;MACvB7B,QAAQ,CAAC,WAAW,CAAC;IAC1B;EACH,CAAC;EAGA,MAAMiC,YAAY,GAAEC,KAAK,IAAG;IAC3B,IAAG,CAAC9E,eAAe,IAAI,CAACwC,SAAS,EAC7BI,QAAQ,CAAC,WAAW,CAAC,CAAC,KACtB;MACA3C,kBAAkB,CAAC,IAAI,CAAC;MACxB2C,QAAQ,CAAC,cAAc,CAAC;IAC5B;EACD,CAAC;EAGA,MAAMmC,kBAAkB,GAAG,MAAMD,KAAK,IAAK;IACtCjF,iBAAiB,CAACiF,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvC9B,OAAO,CAACG,GAAG,CAAC1D,cAAc,CAAC;EAChC,CAAC;EAED,MAAMsF,mBAAmB,GAAIJ,KAAK,IAAK;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtBlF,kBAAkB,CAAC6E,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC;IACA,IAAGvC,UAAU,EACVE,QAAQ,CAAC,uBAAuB,CAAC,CAAC,KAEtCA,QAAQ,CAAC,gBAAgBkC,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,CAAC;EAClD,CAAC;EAED,MAAMG,YAAY,GAAIC,UAAU,IAAK;IACjC,MAAMzB,WAAW,GAAGnC,QAAQ,CAACO,QAAQ,CAACqD,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEvD;IACA;IACA1E,YAAY,CAAC,CAAAiD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,UAAU,KAAI,CAAC,CAAC;IAC1ChD,aAAa,CAAC,CAAA+C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,WAAW,KAAI,CAAC,CAAC;EAChD,CAAC;EAED,MAAMwB,iBAAiB,GAAIR,KAAK,IAAK;IAAA,IAAAS,kBAAA,EAAAC,mBAAA,EAAAC,mBAAA;IACjChF,cAAc,CAACqE,KAAK,CAACE,MAAM,CAACU,aAAa,CAAC;IAC1CnF,gBAAgB,CAACuE,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACpC9B,OAAO,CAACG,GAAG,EAAAiC,kBAAA,GAAC9D,QAAQ,CAACO,QAAQ,CAAC8C,KAAK,CAACE,MAAM,CAACU,aAAa,GAAC,CAAC,CAAC,cAAAH,kBAAA,uBAA/CA,kBAAA,CAAiD1B,UAAU,CAAC;IACxElD,YAAY,EAAA6E,mBAAA,GAAC/D,QAAQ,CAACO,QAAQ,CAAC8C,KAAK,CAACE,MAAM,CAACU,aAAa,GAAC,CAAC,CAAC,cAAAF,mBAAA,uBAA/CA,mBAAA,CAAiD3B,UAAU,CAAC;IACzEhD,aAAa,EAAA4E,mBAAA,GAAChE,QAAQ,CAACO,QAAQ,CAAC8C,KAAK,CAACE,MAAM,CAACU,aAAa,GAAC,CAAC,CAAC,cAAAD,mBAAA,uBAA/CA,mBAAA,CAAiD3B,WAAW,CAAC;EAC/E,CAAC;EAED,MAAM6B,gBAAgB,GAAIb,KAAK,IAAK;IAChC7D,eAAe,CAAC6D,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMW,gBAAgB,GAAId,KAAK,IAAK;IAChC3D,cAAc,CAAC2D,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAEF,MAAMY,gBAAgB,GAAG,MAAMf,KAAK,IAAK;IACrCvD,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMuE,OAAO,GAACC,MAAM,CAACC,OAAO,CAAC,wBAAwBtF,SAAS,UAAUJ,aAAa,EAAE,CAAC;IACxF,IAAG,CAACwF,OAAO,EAAE;IACb,MAAMpC,UAAU,GAAClB,SAAS,IAAIxC,eAAe;IAC7C;IACA,MAAM+C,QAAQ,GAAC,MAAMC,KAAK,CAAC,0CAA0C,EAAC;MAClEO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7Ca,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC/B,SAAS,EAACkB,UAAU;QAACuC,KAAK,EAACzF;MAAW,CAAC;IACjE,CAAC,CAAC;IACF2C,OAAO,CAACG,GAAG,CAACP,QAAQ,CAAC;IACrB,IAAGA,QAAQ,CAAC6B,EAAE,EAAC;MACXH,KAAK,CAAC,uBAAuBnE,aAAa,EAAE,CAAC;MAC7Ce,UAAU,CAAC,IAAI,CAAC;IACpB;EACJ,CAAC;EAED,MAAM6E,eAAe,GAAC,MAAAA,CAAA,KAAS;IAC7B,IAAG;MACD,MAAMC,oBAAoB,GAAC,CAAC1E,QAAQ,CAACQ,gBAAgB;MACrD,MAAMyB,UAAU,GAAClB,SAAS,IAAIxC,eAAe;MAC7C,MAAM+C,QAAQ,GAAE,MAAMC,KAAK,CAAC,8CAA8CU,UAAU,EAAE,EAAE;QACtFH,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7Ca,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACtC,gBAAgB,EAACkE;QAAoB,CAAC;MAC9D,CAAC,CAAC;MACF,IAAGpD,QAAQ,CAAC6B,EAAE,EAAC;QACXvD,UAAU,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CACD,OAAO+E,GAAG,EAAE;MACRjD,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEkD,GAAG,CAAC;IAC3D;EACF,CAAC;EAEF,oBAAQhH,OAAA,CAAAE,SAAA;IAAA+G,QAAA,gBACNjH,OAAA;MAAKkH,SAAS,EAAEtH,OAAO,CAACuH,SAAU;MAAAF,QAAA,eAElCjH,OAAA;QAAMoH,QAAQ,EAAErE,YAAY,CAACiC,aAAa,CAAE;QAACkC,SAAS,EAAEtH,OAAO,CAACyH,IAAK;QAACC,KAAK,EAAE;UAAEC,MAAM,EAAC;QAAgB,CAAE;QAAAN,QAAA,gBACxGjH,OAAA,CAAAE,SAAA;UAAA+G,QAAA,EAEE7D,SAAS,IAAIxC,eAAe,GAC3B0C,UAAU,gBAAEtD,OAAA,CAAAE,SAAA;YAAA+G,QAAA,gBACRjH,OAAA;cAAKsH,KAAK,EAAE;gBAACE,SAAS,EAAC,OAAO;gBAACC,KAAK,EAAC,MAAM;gBAAEC,OAAO,EAAC;cAAM,CAAE;cAAAT,QAAA,gBACzDjH,OAAA;gBAAO2H,OAAO,EAAC,iBAAiB;gBAACL,KAAK,EAAE;kBAACI,OAAO,EAAC,OAAO;kBAACE,QAAQ,EAAC,OAAO;kBAACC,UAAU,EAAC,MAAM;kBAACC,cAAc,EAAC;gBAAQ,CAAE;gBAAAb,QAAA,EAAC;cAAQ;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtIlI,OAAA;gBAAWsH,KAAK,EAAE;kBAACa,SAAS,EAAC;gBAAM,CAAE;gBAACC,EAAE,EAAC,iBAAiB;gBAACC,IAAI,EAAC,MAAM;gBAAC9F,IAAI,EAAC,iBAAiB;gBAAC+F,IAAI,EAAC,GAAG;gBAAA,GAClGxF,QAAQ,CAAC,iBAAiB,EAAE;kBAC1ByF,QAAQ,EAAE;gBACZ,CAAC;cAAC;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,EACDjF,MAAM,CAACuF,eAAe,iBAAIxI,OAAA;gBAAGkH,SAAS,EAAEtH,OAAO,CAAC6I,QAAS;gBAAAxB,QAAA,EAAEhE,MAAM,CAACuF,eAAe,CAAClD;cAAO;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9F,CAAC,eACNlI,OAAA;cAAKsH,KAAK,EAAE;gBAACE,SAAS,EAAC,OAAO;gBAAEkB,YAAY,EAAC;cAAM,CAAE;cAAAzB,QAAA,gBACpDjH,OAAA;gBAAQsH,KAAK,EAAE;kBAAEqB,WAAW,EAAC;gBAAM,CAAE;gBAACzB,SAAS,EAAEtH,OAAO,CAACgJ,MAAO;gBAAEC,OAAO,EAAEpD,YAAa;gBAAAwB,QAAA,EAAC;cAEzF;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTlI,OAAA;gBAAQkH,SAAS,EAAEtH,OAAO,CAACgJ,MAAO;gBAACP,IAAI,EAAC,QAAQ;gBAAApB,QAAA,EAAE;cAElD;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEL,CAAC;UAAA,eACR,CAAC,gBAAGlI,OAAA,CAAAE,SAAA;YAAA+G,QAAA,gBAENjH,OAAA;cAAKkH,SAAS,EAAEtH,OAAO,CAACkJ,OAAQ;cAACxB,KAAK,EAAE;gBAAEI,OAAO,EAAE,MAAM;gBAAEI,cAAc,EAAE,eAAe;gBAAGP,MAAM,EAAC;cAAgB,CAAE;cAAAN,QAAA,gBAClHjH,OAAA;gBAAKsH,KAAK,EAAE;kBAACG,KAAK,EAAC,KAAK;kBAAEsB,SAAS,EAAC,MAAM;kBAAEvB,SAAS,EAAC,MAAM;kBAAEK,UAAU,EAAC;gBAAM,CAAE;gBAAAZ,QAAA,gBAC7EjH,OAAA;kBAAKsH,KAAK,EAAE;oBAACyB,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,GAAC,UAAQ,EAAC5E,QAAQ,CAACG,KAAK;gBAAA;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC9DlI,OAAA;kBAAKsH,KAAK,EAAE;oBAACyB,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,GAAC,UAAQ,EAAC5E,QAAQ,CAACI,KAAK;gBAAA;kBAAAsF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC9DlI,OAAA;kBAAKsH,KAAK,EAAE;oBAACyB,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,GAAC,oBAAkB,EAAC5E,QAAQ,CAACM,YAAY;gBAAA;kBAAAoF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAE9E,CAAC,eACNlI,OAAA;gBAAKsH,KAAK,EAAE;kBAACG,KAAK,EAAC,KAAK;kBAACsB,SAAS,EAAC,MAAM;kBAACC,QAAQ,EAAC,MAAM;kBAACC,UAAU,EAAC;gBAAM,CAAE;gBAAAhC,QAAA,eAClEjH,OAAA;kBAAAiH,QAAA,EAAI5E,QAAQ,CAACE;gBAAI;kBAAAwF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC,eACflI,OAAA;gBAAKsH,KAAK,EAAE;kBAACyB,SAAS,EAAE,OAAO;kBAAEJ,WAAW,EAAC;gBAAM,CAAE;gBAAA1B,QAAA,gBACjDjH,OAAA;kBAAMsH,KAAK,EAAE;oBAACyB,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,GAAC,aAAW,EAAC5E,QAAQ,CAACwC,MAAM;gBAAA;kBAAAkD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACnElI,OAAA;kBAAKsH,KAAK,EAAE;oBAAE0B,QAAQ,EAAE,MAAM;oBAAEE,UAAU,EAAE,SAAS;oBAAGH,SAAS,EAAC;kBAAO,CAAE;kBAAA9B,QAAA,GAAC,aAAW,GAAA5G,iBAAA,GAACgC,QAAQ,CAACK,OAAO,cAAArC,iBAAA,uBAAhBA,iBAAA,CAAkB8I,IAAI,CAAC,IAAI,CAAC;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENlI,OAAA;cAAKsH,KAAK,EAAE;gBAACG,KAAK,EAAC,MAAM;gBAAEC,OAAO,EAAC;cAAM,CAAE;cAAAT,QAAA,gBAC5CjH,OAAA;gBAAKsH,KAAK,EAAE;kBAACE,SAAS,EAAC,MAAM;kBAAEK,UAAU,EAAC,OAAO;kBAAEc,WAAW,EAAC,MAAM;kBAAED,YAAY,EAAC,MAAM;kBAAEK,SAAS,EAAC;gBAAM,CAAE;gBAAA9B,QAAA,gBAChGjH,OAAA;kBAAOsH,KAAK,EAAE;oBAACM,QAAQ,EAAC,OAAO;oBAAEF,OAAO,EAAE;kBAAc,CAAE;kBAACC,OAAO,EAAC,MAAM;kBAAAV,QAAA,EAAC;gBAAY;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrGlI,OAAA;kBACEoI,EAAE,EAAC,OAAO;kBACV7F,IAAI,EAAC,OAAO;kBAAA,GACRO,QAAQ,CAAC,OAAO,EAAE;oBAAEyF,QAAQ,EAAE;kBAAK,CAAC,CAAC;kBACzC1C,KAAK,EAAE3E,aAAc;kBAACkI,QAAQ,EAAElD,iBAAkB;kBAAAe,QAAA,gBAElDjH,OAAA;oBAAQ6F,KAAK,EAAC,EAAE;oBAAAoB,QAAA,EAAC;kBAAY;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACrC9F,MAAM,CAACiH,GAAG,CAAC,CAACxC,KAAK,EAAEyC,KAAK,kBACzBtJ,OAAA;oBAAoB6F,KAAK,EAAEgB,KAAM;oBAAAI,QAAA,EAC9BJ;kBAAK,GADKyC,KAAK;oBAAAvB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEV,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACK,CAAC,EACTjF,MAAM,CAAC4D,KAAK,iBAAI7G,OAAA;kBAAGkH,SAAS,EAAC,UAAU;kBAAAD,QAAA,EAAC;gBAAuB;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAElE,CAAC,EACNhH,aAAa,iBAAKlB,OAAA,CAAAE,SAAA;gBAAA+G,QAAA,gBAClBjH,OAAA;kBAAKsH,KAAK,EAAE;oBAACG,KAAK,EAAC;kBAAK,CAAE;kBAAAR,QAAA,eACvBjH,OAAA;oBAAAiH,QAAA,GAAG,kBAAgB,EAAC3F,SAAS,EAAC,IAAE;kBAAA;oBAAAyG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,eACNlI,OAAA;kBAAKsH,KAAK,EAAE;oBAACG,KAAK,EAAC;kBAAK,CAAE;kBAAAR,QAAA,eACvBjH,OAAA;oBAAAiH,QAAA,GAAG,mBAAiB,EAACzF,UAAU,EAAC,IAAE;kBAAA;oBAAAuG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC,CAAC,EACL5G,SAAS,GAAC,CAAC,iBAAItB,OAAA;kBAAKsH,KAAK,EAAE;oBAACG,KAAK,EAAC;kBAAK,CAAE;kBAAAR,QAAA,eACvCjH,OAAA;oBAAQsH,KAAK,EAAE;sBAAC0B,QAAQ,EAAC,MAAM;sBAAExB,SAAS,EAAC;oBAAM,CAAE;oBAACqB,OAAO,EAAEpC,gBAAiB;oBAAAQ,QAAA,EAAC;kBAAU;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChG,CAAC;cAAA,eACJ,CAAE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACNlI,OAAA;cAAOqI,IAAI,EAAC,QAAQ;cAAA,GAAKvF,QAAQ,CAAC,aAAa,CAAC;cAAE+C,KAAK,EAAEzE,WAAW,IAAI;YAAG;cAAA2G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9ElI,OAAA;cAAA+H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACJhH,aAAa,GAAII,SAAS,KAAG,CAAC,gBAAKtB,OAAA,CAAAE,SAAA;cAAA+G,QAAA,gBACpCjH,OAAA;gBAAKsH,KAAK,EAAE;kBAACyB,SAAS,EAAC,QAAQ;kBAAEC,QAAQ,EAAC,MAAM;kBAAEC,UAAU,EAAC,MAAM;kBAAEzB,SAAS,EAAC,KAAK;kBAAEkB,YAAY,EAAC;gBAAK,CAAE;gBAAAzB,QAAA,EAAC;cAC/E;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClClI,OAAA;gBAAKsH,KAAK,EAAE;kBAACG,KAAK,EAAC,MAAM;kBAAE8B,MAAM,EAAC,KAAK;kBAACC,UAAU,EAAC;gBAAM,CAAE;gBAAAvC,QAAA,gBACpDjH,OAAA;kBAAKsH,KAAK,EAAE;oBAACO,UAAU,EAAC,OAAO;oBAAEc,WAAW,EAAC,MAAM;oBAAED,YAAY,EAAC,MAAM;oBAAEK,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,gBAC7FjH,OAAA;oBAAQsH,KAAK,EAAE;sBAACM,QAAQ,EAAC,OAAO;sBAAEF,OAAO,EAAE;oBAAc,CAAE;oBAACC,OAAO,EAAC,aAAa;oBAAAV,QAAA,EAAC;kBAAK;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAC/FlI,OAAA;oBACIsH,KAAK,EAAE;sBAAEG,KAAK,EAAE,OAAO;sBAAE8B,MAAM,EAAE;oBAAO,CAAE;oBAC1ClB,IAAI,EAAC,MAAM;oBACXD,EAAE,EAAC,aAAa;oBAAA,GACZtF,QAAQ,CAAC,aAAa,EAAE;sBAAEyF,QAAQ,EAAE;oBAAK,CAAC,CAAC;oBAC/ChG,IAAI,EAAC,aAAa;oBAClBsD,KAAK,EAAE/D,WAAY;oBACnBsH,QAAQ,EAAE5C;kBAAiB;oBAAAuB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1B,CAAC,EACP,CAAChG,WAAW,IAAIe,MAAM,CAACnB,WAAW,iBAAI9B,OAAA;oBAAGkH,SAAS,EAAC,UAAU;oBAAAD,QAAA,EAAC;kBAAsB;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAElF,CAAC,eACNlI,OAAA;kBAAKsH,KAAK,EAAE;oBAACO,UAAU,EAAC,OAAO;oBAAEc,WAAW,EAAC,MAAM;oBAAED,YAAY,EAAC,MAAM;oBAAEK,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,gBAC5FjH,OAAA;oBAAQsH,KAAK,EAAE;sBAACM,QAAQ,EAAC,OAAO;sBAAEF,OAAO,EAAE;oBAAc,CAAE;oBAACC,OAAO,EAAC,QAAQ;oBAAAV,QAAA,EAAC;kBAAO;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,OACzF,eAAAlI,OAAA;oBAAOsH,KAAK,EAAE;sBAACG,KAAK,EAAC,MAAM;sBAAC8B,MAAM,EAAC;oBAAM,CAAE;oBAAClB,IAAI,EAAC,MAAM;oBAACD,EAAE,EAAC,QAAQ;oBAAA,GAClEtF,QAAQ,CAAC,QAAQ,EAAE;sBAAEyF,QAAQ,EAAE,cAAc;sBAChDkB,QAAQ,EAAE;wBACFC,OAAO,EAAG7D,KAAK,IAAK8D,MAAM,CAAC9D,KAAK,CAAC,GAAG,CAAC,IAAI,kCAAkC;wBAC3E+D,QAAQ,EAAG/D,KAAK,IAAK,CAACgE,KAAK,CAAChE,KAAK,CAAC,IAAI;sBACxC;oBACN,CAAC,CAAC;oBACHtD,IAAI,EAAC;kBAAQ;oBAAAwF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC,CAAC,EAChB,CAAChG,WAAW,IAAIe,MAAM,CAACvB,MAAM,iBAAI1B,OAAA;oBAAGkH,SAAS,EAAC,UAAU;oBAAAD,QAAA,EAAEhE,MAAM,CAACvB,MAAM,CAAC4D;kBAAO;oBAAAyC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAE9E,CAAC,eACNlI,OAAA;kBAAKsH,KAAK,EAAE;oBAACO,UAAU,EAAC,OAAO;oBAAEc,WAAW,EAAC,MAAM;oBAAED,YAAY,EAAC,MAAM;oBAAEK,SAAS,EAAC;kBAAM,CAAE;kBAAA9B,QAAA,gBAC5FjH,OAAA;oBAAOsH,KAAK,EAAE;sBAACM,QAAQ,EAAC,OAAO;sBAAEF,OAAO,EAAE;oBAAc,CAAE;oBAACC,OAAO,EAAC,MAAM;oBAAAV,QAAA,EAAC;kBAAgB;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACnGlI,OAAA;oBACGoI,EAAE,EAAC,MAAM;oBAAA,GACLtF,QAAQ,CAAC,MAAM,EAAE;sBAAEyF,QAAQ,EAAE;oBAAK,CAAC,CAAC;oBACxChG,IAAI,EAAC,MAAM;oBAACsD,KAAK,EAAEjE,YAAa;oBAACwH,QAAQ,EAAE7C,gBAAiB;oBAAAU,QAAA,gBAE5DjH,OAAA;sBAAQ6F,KAAK,EAAC,EAAE;sBAAAoB,QAAA,EAAC;oBAAW;sBAAAc,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACnClI,OAAA;sBAAS6F,KAAK,EAAC,MAAM;sBAAAoB,QAAA,EAAC;oBAEtB;sBAAAc,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACTlI,OAAA;sBAAS6F,KAAK,EAAC,KAAK;sBAAAoB,QAAA,EAAC;oBAErB;sBAAAc,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACTlI,OAAA;sBAAS6F,KAAK,EAAC,MAAM;sBAAAoB,QAAA,EAAC;oBAEtB;sBAAAc,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL,CAAC,EACV,CAAChG,WAAW,IAAIe,MAAM,CAACsC,IAAI,iBAAIvF,OAAA;oBAAGkH,SAAS,EAAC,UAAU;oBAAAD,QAAA,EAAC;kBAAsB;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3E,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,eACJ,CAAC,gBAEHlI,OAAA;cAAAiH,QAAA,EAAK;YAAsB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBAAClI,OAAA;cAAAiH,QAAA,EAAK;YAAmC;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,eAE9E,CAAE,gBAEJlI,OAAA;YAAKsH,KAAK,EAAE;cAACI,OAAO,EAAC,MAAM;cAAEF,SAAS,EAAC,MAAM;cAACkB,YAAY,EAAC,MAAM;cAAEb,UAAU,EAAC,OAAO;cAAEJ,KAAK,EAAC;YAAK,CAAE;YAAAR,QAAA,gBACpGjH,OAAA;cAAKkH,SAAS,EAAEtH,OAAO,CAACkJ,OAAQ;cAAA7B,QAAA,gBAC9BjH,OAAA;gBAAOsH,KAAK,EAAE;kBAACG,KAAK,EAAC;gBAAO,CAAE;gBAACE,OAAO,EAAC,QAAQ;gBAAAV,QAAA,EAAC;cAAM;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9DlI,OAAA;gBACEoI,EAAE,EAAC,QAAQ;gBACX7F,IAAI,EAAC,QAAQ;gBAACsD,KAAK,EAAErF,cAAe;gBAAC4I,QAAQ,EAAEzD,kBAAmB;gBAAAsB,QAAA,gBAElEjH,OAAA;kBAAQ6F,KAAK,EAAC,EAAE;kBAAAoB,QAAA,EAAC;gBAAe;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACzClI,OAAA;kBAAgB6F,KAAK,EAAC,GAAG;kBAAAoB,QAAA,EAAC;gBAEzB,GAFW,GAAG;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEN,CAAC,EACT5H,QAAQ,IAAIA,QAAQ,CAAC+I,GAAG,CAAExE,MAAM,iBAC/B7E,OAAA;kBAAyB6F,KAAK,EAAEhB,MAAM,CAACiF,GAAI;kBAAA7C,QAAA,EACxCpC,MAAM,CAACC;gBAAW,GADRD,MAAM,CAACiF,GAAG;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEf,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC,EACRjF,MAAM,CAAC4B,MAAM,iBAAI7E,OAAA;gBAAGkH,SAAS,EAAC,UAAU;gBAAAD,QAAA,EAAEhE,MAAM,CAAC4B,MAAM,CAACS;cAAO;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,eAENlI,OAAA;cAAKkH,SAAS,EAAEtH,OAAO,CAACkJ,OAAQ;cAAA7B,QAAA,gBAC9BjH,OAAA;gBAAQsH,KAAK,EAAE;kBAACG,KAAK,EAAC;gBAAO,CAAE;gBAACE,OAAO,EAAC,SAAS;gBAAAV,QAAA,EAAC;cAAO;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjElI,OAAA;gBACEoI,EAAE,EAAC,SAAS;gBACZ7F,IAAI,EAAC,SAAS;gBAACsD,KAAK,EAAEjF,eAAgB;gBAACwI,QAAQ,EAAEtD,mBAAoB;gBAAAmB,QAAA,gBAErEjH,OAAA;kBAAQ6F,KAAK,EAAC,EAAE;kBAAAoB,QAAA,EAAC;gBAAgB;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACzCxH,QAAQ,IAAIA,QAAQ,CAAC2I,GAAG,CAAE9E,OAAO,iBAChCvE,OAAA;kBAA0B6F,KAAK,EAAEtB,OAAO,CAACuF,GAAI;kBAAA7C,QAAA,EAC1C1C,OAAO,CAAChC;gBAAI,GADFgC,OAAO,CAACuF,GAAG;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEhB,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC,EACPjF,MAAM,CAAC4B,MAAM,iBAAI7E,OAAA;gBAAGkH,SAAS,EAAC,UAAU;gBAAAD,QAAA,EAAEhE,MAAM,CAACsB,OAAO,CAACe;cAAO;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QACN,gBACC,CAAC,EAEAhH,aAAa,IAAII,SAAS,KAAG,CAAC,KAAK8B,SAAS,IAAIxC,eAAe,CAAC,iBACjEZ,OAAA;UAAKsH,KAAK,EAAE;YAACE,SAAS,EAAC,OAAO;YAAEkB,YAAY,EAAC;UAAM,CAAE;UAAAzB,QAAA,gBACpDjH,OAAA;YAAQsH,KAAK,EAAE;cAAEqB,WAAW,EAAC;YAAM,CAAE;YAACzB,SAAS,EAAEtH,OAAO,CAACgJ,MAAO;YAAEC,OAAO,EAAEpD,YAAa;YAAAwB,QAAA,EAAC;UAEzF;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlI,OAAA;YAAQkH,SAAS,EAAEtH,OAAO,CAACgJ,MAAO;YAACP,IAAI,EAAC,QAAQ;YAAApB,QAAA,EAC7C/D,YAAY,GAAE,YAAY,GAAE;UAAS;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAE,eAGXlI,OAAA;UAAKsH,KAAK,EAAE;YAAEI,OAAO,EAAE,MAAM;YAAEI,cAAc,EAAE,eAAe;YAC9DN,SAAS,EAAC,MAAM;YAACkB,YAAY,EAAC,MAAM;YAAEC,WAAW,EAAC,MAAM;YAAEd,UAAU,EAAC;UAAM,CAAE;UAAAZ,QAAA,EAExE,CAAC3D,UAAU,KAAKF,SAAS,IAAIxC,eAAe,CAAC,KAAKyB,QAAQ,CAACQ,gBAAgB,gBACtE7C,OAAA,CAAAE,SAAA;YAAA+G,QAAA,gBAAEjH,OAAA;cAAAiH,QAAA,eAAKjH,OAAA,CAACP,OAAO;gBAAC6H,KAAK,EAAE;kBAACyC,cAAc,EAAC;gBAAM,CAAE;gBAAClB,OAAO,EAAE/B,eAAgB;gBAAAG,QAAA,EAAC;cAE3E;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChBlI,OAAA;cAAAiH,QAAA,eAAKjH,OAAA,CAACP,OAAO;gBAAC6H,KAAK,EAAE;kBAACyC,cAAc,EAAC;gBAAM,CAAE;gBACrCC,EAAE,EAAE,yBAAyBpJ,eAAe,IAAIqJ,UAAU,EAAG;gBAAAhD,QAAA,EAAC;cACtE;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,eAAE,CAAC,gBAEdlI,OAAA;YAAAiH,QAAA,eAAKjH,OAAA,CAACP,OAAO;cAAC6H,KAAK,EAAE;gBAACyC,cAAc,EAAC;cAAM,CAAE;cAC7ClB,OAAO,EAAE/B,eAAgB;cAAAG,QAAA,EAAC;YAAiB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAEpE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNlI,OAAA;MAAKsH,KAAK,EAAE;QAACyB,SAAS,EAAC,OAAO;QAACJ,WAAW,EAAC;MAAO,CAAE;MAAA1B,QAAA,eAC/CjH,OAAA,CAACP,OAAO;QAAC6H,KAAK,EAAE;UAACyC,cAAc,EAAC;QAAM,CAAE;QAAClB,OAAO,EAAEpD,YAAa;QAAAwB,QAAA,eAACjH,OAAA;UAAAiH,QAAA,EAAM;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACrG,CAAC;AAEN,CAAC;AAAA9H,EAAA,CA7dKD,eAAe;EAAA,QAoCfT,OAAO,EAEaF,SAAS,EACdD,WAAW,EAEZD,WAAW;AAAA;AAAA4K,EAAA,GAzCzB/J,eAAe;AA8drB,eAAeA,eAAe;AAAA,IAAA+J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}