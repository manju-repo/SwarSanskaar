{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\StudentList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport classes from './StudentList.module.css';\nimport { useContext, useEffect, useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentList = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  students,\n  branchId,\n  updateStudentList\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const removeStudentHandler = id => {\n    const yn = window.confirm(\"Are you sure you want to delete this Student\");\n    if (!yn) return;\n    /* const deleteFabric = async(dispatch)=>{\r\n       try{\r\n            const response=await fetch(\r\n                     `http://localhost:5000/fabrics/${id}`,\r\n                     { method:'DELETE',\r\n                       headers:{Authorization:'Bearer '+ authCtx.token}\r\n                     }\r\n                   );\r\n            if(! response.ok)\r\n                 throw new Error(\"Could not delete the Fabric\");\r\n            const resData = await response.json();\r\n            console.log(resData);\r\n            updateFabricList();\r\n            navigate('/store/'+category);\r\n         }\r\n         catch(error){\r\n             console.log(error);\r\n             }\r\n         }\r\n       deleteFabric(dispatch);*/\n  };\n  const addStudentHandler = () => {\n    navigate(`/students/new/${branchId}`);\n  };\n  const changeStatusHandler = async (studentId, currentStatus) => {\n    const newStatus = !currentStatus; // Toggle the boolean status\n\n    try {\n      const response = await fetch(`http://localhost:5000/students/${studentId}/status`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          active: newStatus\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update student status');\n      }\n      const resData = await response.json();\n      console.log('Status updated:', resData);\n\n      // Update student list after status change\n      updateStudentList();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: students.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There are no Students enrolled currently in this Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.gallery,\n      children: students.map(student => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.responsive} ${classes.item}`,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              style: {\n                textDecoration: 'none'\n              },\n              to: {\n                pathname: `/student/edit/${student._id}`\n              },\n              className: ({\n                isActive\n              }) => isActive ? classes.linkActive : classes.link,\n              end: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.desc,\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.trashIcon,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeStatusHandler(student._id, student.active),\n                className: classes.link,\n                style: {\n                  border: 'none',\n                  background: 'none',\n                  color: 'inherit',\n                  cursor: 'pointer'\n                },\n                children: student.active ? 'Set as Inactive' : 'Set as Active'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 7\n            }, this)]\n          }, student._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 6\n          }, this)\n        }, student._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textDecoration: 'none'\n        },\n        to: {\n          pathname: `/student/new`\n        },\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n})), \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = StudentList;\nexport default StudentList;\nvar _c, _c2;\n$RefreshReg$(_c, \"StudentList$React.memo\");\n$RefreshReg$(_c2, \"StudentList\");","map":{"version":3,"names":["React","classes","useContext","useEffect","useState","NavLink","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentList","_s","memo","_c","students","branchId","updateStudentList","navigate","removeStudentHandler","id","yn","window","confirm","addStudentHandler","changeStatusHandler","studentId","currentStatus","newStatus","response","fetch","method","headers","body","JSON","stringify","active","ok","Error","resData","json","console","log","error","message","children","length","fileName","_jsxFileName","lineNumber","columnNumber","className","gallery","map","student","responsive","item","style","textDecoration","to","pathname","_id","isActive","linkActive","link","end","desc","name","trashIcon","onClick","border","background","color","cursor","textAlign","marginTop","_c2","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/StudentList.js"],"sourcesContent":["import React from 'react';\r\nimport classes from './StudentList.module.css';\r\nimport {useContext, useEffect, useState} from 'react';\r\nimport {NavLink, useNavigate} from 'react-router-dom';\r\nimport  '@fortawesome/fontawesome-free/css/all.css';\r\n\r\n\r\nconst StudentList=React.memo(({students, branchId, updateStudentList} ) =>{\r\n\r\n    const navigate=useNavigate();\r\n\r\n const removeStudentHandler = (id) => {\r\n    const yn=window.confirm(\"Are you sure you want to delete this Student\");\r\n    if(!yn) return;\r\n   /* const deleteFabric = async(dispatch)=>{\r\n      try{\r\n           const response=await fetch(\r\n                    `http://localhost:5000/fabrics/${id}`,\r\n                    { method:'DELETE',\r\n                      headers:{Authorization:'Bearer '+ authCtx.token}\r\n                    }\r\n                  );\r\n           if(! response.ok)\r\n                throw new Error(\"Could not delete the Fabric\");\r\n           const resData = await response.json();\r\n           console.log(resData);\r\n           updateFabricList();\r\n           navigate('/store/'+category);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            }\r\n        }\r\n      deleteFabric(dispatch);*/\r\n   }\r\n\r\n   const addStudentHandler = () => {\r\n    navigate(`/students/new/${branchId}`);\r\n   }\r\n\r\nconst changeStatusHandler = async (studentId, currentStatus) => {\r\n    const newStatus = !currentStatus; // Toggle the boolean status\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/students/${studentId}/status`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n\r\n        body: JSON.stringify({ active: newStatus }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update student status');\r\n      }\r\n\r\n      const resData = await response.json();\r\n      console.log('Status updated:', resData);\r\n\r\n      // Update student list after status change\r\n      updateStudentList();\r\n\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (<>\r\n<div>\r\n    {students.length===0 && <h2>There are no Students enrolled currently in this Branch</h2>}\r\n</div>\r\n\r\n<ul className={classes.gallery}>\r\n  { students.map((student) => (<>\r\n\r\n     <div key={student._id} className={`${classes.responsive} ${classes.item}`}>\r\n     <li key={student._id} >\r\n        <NavLink  style={{textDecoration:'none'}} to={{pathname:`/student/edit/${student._id}` }}  className={({isActive})=>isActive?classes.linkActive : classes.link}end>\r\n            <div className={classes.desc}>{student.name}</div>\r\n        </NavLink>\r\n\r\n      <div className={classes.trashIcon}>\r\n        <button\r\n          onClick={() => changeStatusHandler(student._id, student.active)}\r\n          className={classes.link}\r\n          style={{ border: 'none', background: 'none', color: 'inherit', cursor: 'pointer' }}>\r\n          {student.active ? 'Set as Inactive' : 'Set as Active'}\r\n        </button>\r\n      </div>\r\n\r\n     </li>\r\n     </div>\r\n\r\n </>))}\r\n</ul>\r\n    <div style={{textAlign:'center', marginTop:'10px'}}><NavLink style={{textDecoration:'none'}} to={{pathname:`/student/new`}}>Add Student</NavLink></div>\r\n</>\r\n);\r\n});\r\nexport default StudentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}