{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\Branches.js\",\n  _s = $RefreshSig$();\nimport { NavLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport classes from './branches.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Branches() {\n  _s();\n  const [branches, setBranches] = useState([]); // State to hold branch names\n\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    fetchBranches();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.branchesContainer,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0,\n          display: 'flex',\n          padding: 0,\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '0 10px',\n          flexWrap: 'wrap'\n        },\n        children: branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.branch,\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: {\n              pathname: `/branches/${branch._id}`\n            },\n            children: branch.branch_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Branches, \"M6EAE75TVICgj/7XODWazMI7gfg=\");\n_c = Branches;\nexport default Branches;\nvar _c;\n$RefreshReg$(_c, \"Branches\");","map":{"version":3,"names":["NavLink","useState","useEffect","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","Branches","_s","branches","setBranches","fetchBranches","response","fetch","data","json","console","log","error","children","className","branchesContainer","style","listStyleType","padding","display","justifyContent","alignItems","flexWrap","map","branch","to","pathname","_id","branch_name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/Branches.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport  classes from './branches.module.css';\r\n\r\nfunction Branches() {\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n\r\n    useEffect(() => {\r\n        const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n        fetchBranches();\r\n    }, []);\r\n\r\n  return (<>\r\n    <div className={classes.branchesContainer}>\r\n      <ul style={{ listStyleType: 'none', padding: 0 ,display:'flex', padding: 0, justifyContent: 'space-between',\r\n                    alignItems: 'center',padding:'0 10px', flexWrap:'wrap'}}>\r\n\r\n        {branches && branches.map((branch) => (\r\n        <li className={classes.branch}>\r\n            <NavLink to={{pathname:`/branches/${branch._id}`}}>{branch.branch_name}</NavLink></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n\r\n  </>);\r\n}\r\n\r\nexport default Branches;"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAQC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACL,QAAQ,CAAC;QAE1BC,WAAW,CAACI,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACGP,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAER,oBAAQP,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACNf,OAAA;MAAKgB,SAAS,EAAElB,OAAO,CAACmB,iBAAkB;MAAAF,QAAA,eACxCf,OAAA;QAAIkB,KAAK,EAAE;UAAEC,aAAa,EAAE,MAAM;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAC,MAAM;UAAED,OAAO,EAAE,CAAC;UAAEE,cAAc,EAAE,eAAe;UAC7FC,UAAU,EAAE,QAAQ;UAACH,OAAO,EAAC,QAAQ;UAAEI,QAAQ,EAAC;QAAM,CAAE;QAAAT,QAAA,EAEnEV,QAAQ,IAAIA,QAAQ,CAACoB,GAAG,CAAEC,MAAM,iBACjC1B,OAAA;UAAIgB,SAAS,EAAElB,OAAO,CAAC4B,MAAO;UAAAX,QAAA,eAC1Bf,OAAA,CAACL,OAAO;YAACgC,EAAE,EAAE;cAACC,QAAQ,EAAC,aAAaF,MAAM,CAACG,GAAG;YAAE,CAAE;YAAAd,QAAA,EAAEW,MAAM,CAACI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACxF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBAEN,CAAC;AACL;AAAC9B,EAAA,CA/BQD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}