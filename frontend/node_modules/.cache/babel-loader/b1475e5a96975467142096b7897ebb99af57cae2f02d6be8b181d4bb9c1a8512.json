{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\pages\\\\Students.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport StudentList from '../components/StudentList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Students() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const {\n    branchId\n  } = useParams();\n  console.log(\"branch\", branchId);\n  const fetchStudents = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\n      if (!response.ok) {\n        throw new Error('Fetching students failed');\n      }\n      const {\n        students\n      } = await response.json();\n      console.log(students);\n      setStudents(students);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [branchId]);\n  useEffect(() => {\n    fetchStudents();\n  }, [fetchStudents]);\n  useEffect(() => {\n    if (items && query) {\n      const keywords = query.split(/\\s+/);\n      const filteredItems = items.filter(item => keywords.every(keyword => {\n        var _item$desc;\n        return item === null || item === void 0 ? void 0 : (_item$desc = item.desc) === null || _item$desc === void 0 ? void 0 : _item$desc.toLowerCase().includes(keyword.toLowerCase());\n      }));\n      setSearchItems(filteredItems);\n    }\n  }, [items, query]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: students && /*#__PURE__*/_jsxDEV(StudentList, {\n      students: students,\n      branchId: branchId,\n      updateStudentList: fetchStudents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n}\n_s(Students, \"OxhVEsR1KEww9zLE07F3ueHuw44=\", false, function () {\n  return [useParams];\n});\n_c = Students;\n;\nexport default Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["useEffect","useState","useCallback","useParams","StudentList","jsxDEV","_jsxDEV","Fragment","_Fragment","Students","_s","students","setStudents","branchId","console","log","fetchStudents","response","fetch","ok","Error","json","error","message","items","query","keywords","split","filteredItems","filter","item","every","keyword","_item$desc","desc","toLowerCase","includes","setSearchItems","children","updateStudentList","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/pages/Students.js"],"sourcesContent":["import { useEffect, useState, useCallback} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport StudentList from '../components/StudentList';\r\n\r\nfunction Students() {\r\n  const [students, setStudents] = useState([]);\r\n  const {branchId} = useParams();\r\n  console.log(\"branch\",branchId);\r\n\r\n    const fetchStudents=useCallback(async()=>{\r\n        try{\r\n\r\n              const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\r\n              if (!response.ok) {\r\n                throw new Error('Fetching students failed')\r\n              }\r\n              const {students} = await response.json();\r\n              console.log(students);\r\n              setStudents(students);\r\n          }catch(error){\r\n            console.log(error.message);\r\n           }\r\n        },[branchId]);\r\n\r\n  useEffect(() => {\r\n        fetchStudents();\r\n    },[fetchStudents]);\r\n\r\n\r\n   useEffect(() => {\r\n       if (items && query) {\r\n           const keywords = query.split(/\\s+/);\r\n           const filteredItems = items.filter(item =>\r\n               keywords.every(keyword => item?.desc?.toLowerCase().includes(keyword.toLowerCase()))\r\n           );\r\n           setSearchItems(filteredItems);\r\n       }\r\n   }, [items, query]);\r\n\r\n    return (\r\n    <>{students && <StudentList students={students} branchId={branchId} updateStudentList={fetchStudents}/>}</>);\r\n  };\r\n\r\n    export default Students;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AACvD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACY;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9BW,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACF,QAAQ,CAAC;EAE5B,MAAMG,aAAa,GAACd,WAAW,CAAC,YAAS;IACrC,IAAG;MAEG,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCL,QAAQ,EAAE,CAAC;MACjF,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAM;QAACT;MAAQ,CAAC,GAAG,MAAMM,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxCP,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrBC,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,QAAMW,KAAK,EAAC;MACXR,OAAO,CAACC,GAAG,CAACO,KAAK,CAACC,OAAO,CAAC;IAC3B;EACH,CAAC,EAAC,CAACV,QAAQ,CAAC,CAAC;EAEnBb,SAAS,CAAC,MAAM;IACVgB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAC,CAACA,aAAa,CAAC,CAAC;EAGnBhB,SAAS,CAAC,MAAM;IACZ,IAAIwB,KAAK,IAAIC,KAAK,EAAE;MAChB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAAC,KAAK,CAAC;MACnC,MAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAACC,IAAI,IACnCJ,QAAQ,CAACK,KAAK,CAACC,OAAO;QAAA,IAAAC,UAAA;QAAA,OAAIH,IAAI,aAAJA,IAAI,wBAAAG,UAAA,GAAJH,IAAI,CAAEI,IAAI,cAAAD,UAAA,uBAAVA,UAAA,CAAYE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACJ,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC;MAAA,EACvF,CAAC;MACDE,cAAc,CAACT,aAAa,CAAC;IACjC;EACJ,CAAC,EAAE,CAACJ,KAAK,EAAEC,KAAK,CAAC,CAAC;EAEjB,oBACAnB,OAAA,CAAAE,SAAA;IAAA8B,QAAA,EAAG3B,QAAQ,iBAAIL,OAAA,CAACF,WAAW;MAACO,QAAQ,EAAEA,QAAS;MAACE,QAAQ,EAAEA,QAAS;MAAC0B,iBAAiB,EAAEvB;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAAG,CAAC;AAC7G;AAACjC,EAAA,CArCMD,QAAQ;EAAA,QAEIN,SAAS;AAAA;AAAAyC,EAAA,GAFrBnC,QAAQ;AAqCd;AAEC,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}