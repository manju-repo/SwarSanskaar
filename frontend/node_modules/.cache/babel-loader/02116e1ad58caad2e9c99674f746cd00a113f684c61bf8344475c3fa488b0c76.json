{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\FeesPaymentForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigate } from 'react-router-dom';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useForm, setValue } from 'react-hook-form';\nimport classes from './RegistrationForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeesPaymentForm = () => {\n  _s();\n  const [branches, setBranches] = useState([]); // State to hold branch names\n  const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\n  const [students, setStudents] = useState([]); // State to hold student names\n  const [selectedStudent, setSelectedStudent] = useState(''); // State to store selected studentId\n  const [studentName, setStudentName] = useState(''); //state to hold student name in case of parameter studentId\n  const [branchName, setBranchName] = useState(''); //state to hold branch name in case of parameter studentId\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const {\n    studentId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/students`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          students\n        } = await response.json();\n        console.log(students);\n        setStudents(students);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const fetchStudent = async () => {\n      if (studentId) {\n        try {\n          const response = await fetch(`http://localhost:5000/students/${studentId}`);\n          const {\n            student\n          } = await response.json();\n          console.log(student);\n          if (student) {\n            reset({\n              name: student.name,\n              email: student.email,\n              phone: student.phone,\n              address: student.address,\n              monthly_fees: student.monthly_fees\n            });\n          }\n          if (student !== null && student !== void 0 && student.branch_id) {\n            const branchResp = await fetch(`http://localhost:5000/branches/${student.branch_id}`);\n            const {\n              branch\n            } = await branchResp.json();\n            setBranchName(branch === null || branch === void 0 ? void 0 : branch.branch_name);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    if (studentId) fetchStudent();else {\n      fetchBranches();\n      fetchStudents();\n    }\n  }, []);\n  const submitHandler = async data => {\n    data.branch_id = selectedBranch;\n    console.log(data);\n    let response;\n    response = await fetch(`http://localhost:5000/students/${studentId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n    navigate('/students');\n  };\n  const resetHandler = () => {\n    console.log(\"in reset\");\n    window.history.back();\n  };\n  const handleBranchChange = event => {\n    setSelectedBranch(event.target.value); // Set selected branchId\n  };\n  const handleStudentChange = event => {\n    setSelectedStudent(event.target.value); // Set selected studentId\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: studentId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              ...register(\"name\", {\n                required: \"Student name is required.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 12\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: \"Email is required.\",\n                pattern: {\n                  value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                  message: \"Email is not valid.\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 10\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"phone\",\n              type: \"text\",\n              name: \"phone\",\n              ...register(\"phone\", {\n                required: \"Phone Number is required.\",\n                minLength: {\n                  value: 10,\n                  message: \"Please enter a valid 10-digit phone number\"\n                },\n                maxLength: {\n                  value: 10,\n                  message: \"Please enter a valid 10-digit phone number\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.phone.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                minWidth: '240px'\n              },\n              htmlFor: \"address\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address1\",\n                name: \"address1\",\n                ...register(\"address.0\", {\n                  required: \"Enter atleast one address field.\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address2\",\n                name: \"address2\",\n                ...register(\"address.1\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address3\",\n                name: \"address\",\n                ...register(\"address.2\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"  \", errors.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"errorMsg\",\n                  children: errors.address.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"branch\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"branch\",\n              name: \"branch\",\n              value: selectedBranch,\n              onChange: handleBranchChange,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"branch\",\n                name: \"branch\",\n                ...register(\"branch\", {\n                  required: \"Branch name is required.\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), \"))}\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"monthly_fees\",\n              children: \"Monthly Fees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"monthly_fees\",\n              type: \"text\",\n              name: \"monthly_fees\",\n              ...register(\"monthly_fees\", {\n                required: \"PLease enter the fees for this student\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), errors.monthly_fees && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.monthly_fees.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"branch\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"branch\",\n              name: \"branch\",\n              value: selectedBranch,\n              onChange: handleBranchChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 13\n              }, this), branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: branch._id,\n                children: branch.branch_name\n              }, branch._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"student\",\n              name: \"student\",\n              value: selectedStudent,\n              onChange: handleStudentChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 13\n              }, this), students && students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: student.name,\n                children: student.name\n              }, student._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"reset\",\n          onClick: resetHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"submit\",\n          children: isSubmitting ? 'Submitting' : 'Proceed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 6\n  }, this);\n};\n_s(FeesPaymentForm, \"Q8Ebpg0XmFYkSNQnTiI9PvwE/kw=\", false, function () {\n  return [useForm, useParams, useLocation, useNavigate];\n});\n_c = FeesPaymentForm;\nexport default FeesPaymentForm;\nvar _c;\n$RefreshReg$(_c, \"FeesPaymentForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigate","useLocation","useParams","useForm","setValue","classes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeesPaymentForm","_s","branches","setBranches","selectedBranch","setSelectedBranch","students","setStudents","selectedStudent","setSelectedStudent","studentName","setStudentName","branchName","setBranchName","register","handleSubmit","formState","errors","isSubmitting","reset","studentId","location","navigate","fetchBranches","response","fetch","data","json","console","log","error","fetchStudents","method","headers","fetchStudent","student","name","email","phone","address","monthly_fees","branch_id","branchResp","branch","branch_name","submitHandler","body","JSON","stringify","resetHandler","window","history","back","handleBranchChange","event","target","value","handleStudentChange","className","container","children","onSubmit","form","control","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","message","pattern","minLength","maxLength","style","minWidth","textAlign","onChange","map","_id","marginTop","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/FeesPaymentForm.js"],"sourcesContent":["import {\r\n  Form,\r\n  Link,\r\n  useSearchParams,\r\n  useActionData,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport {useLocation, useParams} from 'react-router-dom';\r\nimport { useForm, setValue } from 'react-hook-form';\r\nimport classes from './RegistrationForm.module.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst FeesPaymentForm=()=>{\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n    const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\r\n    const [students, setStudents] = useState([]); // State to hold student names\r\n    const [selectedStudent, setSelectedStudent] = useState(''); // State to store selected studentId\r\n    const [studentName,setStudentName]=useState('');    //state to hold student name in case of parameter studentId\r\n    const [branchName, setBranchName]=useState('');     //state to hold branch name in case of parameter studentId\r\n\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset\r\n  } = useForm();\r\n\r\n    const { studentId } = useParams();\r\n    const location = useLocation();\r\n    const navigate= useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n\r\n    const fetchStudents=async()=>{\r\n      try{\r\n           const response=await fetch(`http://localhost:5000/students`,{\r\n                 method:'GET',\r\n                 headers:{\r\n                     'Content-Type':'application/json',\r\n                     }\r\n                 });\r\n\r\n           const {students}=await response.json();\r\n           console.log(students);\r\n           setStudents(students);\r\n       }\r\n       catch(error){\r\n           console.log(error);\r\n       }\r\n      };\r\n\r\n      const fetchStudent=async()=>{\r\n       if(studentId){\r\n            try{\r\n                 const response=await fetch(`http://localhost:5000/students/${studentId}`);\r\n                 const {student}=await response.json();\r\n                 console.log(student);\r\n                 if(student){\r\n                  reset({\r\n                       name: student.name,\r\n                       email: student.email,\r\n                       phone: student.phone,\r\n                       address:student.address,\r\n                       monthly_fees:student.monthly_fees\r\n                    });\r\n                  }\r\n                 if (student?.branch_id) {\r\n                    const branchResp=await fetch(`http://localhost:5000/branches/${student.branch_id}`);\r\n                    const {branch}=await branchResp.json();\r\n                    setBranchName(branch?.branch_name);\r\n                 }\r\n             }\r\n             catch(error){\r\n                 console.log(error);\r\n             }\r\n         }\r\n       };\r\n\r\n      if (studentId)\r\n         fetchStudent();\r\n      else{\r\n          fetchBranches();\r\n          fetchStudents();\r\n      }\r\n    }, []);\r\n\r\n\r\n\r\n  const submitHandler =async (data) => {\r\n    data.branch_id = selectedBranch;\r\n    console.log(data);\r\n    let response;\r\n      response= await fetch(`http://localhost:5000/students/${studentId}`, {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(data)\r\n     });\r\n\r\n      console.log(response);\r\n      navigate('/students');\r\n  };\r\n\r\n\r\n   const resetHandler=()=>{\r\n        console.log(\"in reset\");\r\nwindow.history.back();   };\r\n\r\n\r\n    const handleBranchChange = (event) => {\r\n         setSelectedBranch(event.target.value); // Set selected branchId\r\n    };\r\n\r\n    const handleStudentChange = (event) => {\r\n             setSelectedStudent(event.target.value); // Set selected studentId\r\n        };\r\n\r\n   return (\r\n     <div className={classes.container}>\r\n     <form onSubmit={handleSubmit(submitHandler)} className={classes.form}>\r\n        <>\r\n    {studentId ? (<>\r\n         <div className={classes.control}>\r\n           <label htmlFor=\"name\">Student Name</label>\r\n           <input type=\"text\" id=\"name\" name=\"name\"\r\n             {...register(\"name\", { required: \"Student name is required.\" })}  />\r\n          {errors.name && <p className=\"errorMsg\">{errors.name.message}</p>}\r\n         </div>\r\n\r\n        <div className={classes.control}>\r\n         <label htmlFor=\"email\">Email</label>\r\n         <input id=\"email\" type=\"email\" name=\"email\"\r\n         {...register(\"email\", {\r\n               required: \"Email is required.\",\r\n               pattern: {\r\n                 value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                 message: \"Email is not valid.\"\r\n               }\r\n             })}\r\n           />\r\n         {errors.email && <p className=\"errorMsg\">{errors.email.message}</p>}\r\n       </div>\r\n\r\n\r\n         <div className={classes.control}>\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <input\r\n              id=\"phone\"\r\n              type=\"text\"\r\n              name=\"phone\"\r\n               {...register(\"phone\", { required: \"Phone Number is required.\",\r\n                minLength: {\r\n                              value: 10,\r\n                              message: \"Please enter a valid 10-digit phone number\"\r\n                            },\r\n                maxLength: {\r\n                              value: 10,\r\n                              message: \"Please enter a valid 10-digit phone number\"\r\n                            }\r\n                            })}\r\n            />\r\n            {errors.phone && (\r\n                 <p className=\"errorMsg\">{errors.phone.message}</p>)}\r\n          </div>\r\n\r\n\r\n          <div className={classes.control}>\r\n            <label style={{minWidth:'240px'}} htmlFor=\"address\">Address</label>\r\n            <div style={{textAlign:'left'}}>\r\n                  <input  type=\"text\" id=\"address1\" name=\"address1\" {...register(\"address.0\",{ required: \"Enter atleast one address field.\" })} />\r\n                   <input type=\"text\" id=\"address2\" name=\"address2\" {...register(\"address.1\")} />\r\n                   <input type=\"text\" id=\"address3\" name=\"address\" {...register(\"address.2\")} />\r\n                   <div>  {errors.address && (<p className=\"errorMsg\">{errors.address.message}</p>)}</div>\r\n          </div>\r\n          </div>\r\n\r\n        <div className={classes.control}>\r\n              <label htmlFor=\"branch\">Branch</label>\r\n              <select\r\n                id=\"branch\"\r\n                name=\"branch\" value={selectedBranch} onChange={handleBranchChange}\r\n              >\r\n                <input type=\"text\" id=\"branch\" name=\"branch\"\r\n                 {...register(\"branch\", { required: \"Branch name is required.\" })}  />\r\n                ))}\r\n              </select>\r\n              {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n            </div>\r\n\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"monthly_fees\">Monthly Fees</label>\r\n                <input\r\n                  id=\"monthly_fees\"\r\n                  type=\"text\"\r\n                  name=\"monthly_fees\"\r\n                   {...register(\"monthly_fees\", { required: \"PLease enter the fees for this student\"})}\r\n                />\r\n                {errors.monthly_fees && (\r\n                     <p className=\"errorMsg\">{errors.monthly_fees.message}</p>)}\r\n              </div>\r\n              </>\r\n      ):(\r\n        <>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"branch\">Branch</label>\r\n          <select\r\n            id=\"branch\"\r\n            name=\"branch\" value={selectedBranch} onChange={handleBranchChange}>\r\n\r\n            <option value=\"\">Select a Branch</option>\r\n            {branches && branches.map((branch) => (\r\n              <option key={branch._id} value={branch._id}>\r\n                {branch.branch_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"student\">Student</label>\r\n          <select\r\n            id=\"student\"\r\n            name=\"student\" value={selectedStudent} onChange={handleStudentChange}\r\n          >\r\n            <option value=\"\">Select a Student</option>\r\n            {students && students.map((student) => (\r\n              <option key={student._id} value={student.name}>\r\n                {student.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n        </>\r\n      )}\r\n      </>\r\n\r\n       <div style={{marginTop:'20px'}}>\r\n         <button className={classes.button} type=\"reset\" onClick={resetHandler}>\r\n           Cancel\r\n         </button>\r\n         <button className={classes.button} type=\"submit\" >\r\n           {isSubmitting? 'Submitting': 'Proceed'}\r\n         </button>\r\n        </div>\r\n\r\n\r\n     </form>\r\n    </div>\r\n\r\n   )\r\n\r\n}\r\nexport default FeesPaymentForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}