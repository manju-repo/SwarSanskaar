{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport classes from './RegistrationForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [imageName, setImageName] = useState('Choose Image...');\n  const [branches, setBranches] = useState([]); // State to hold branch names\n  const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    fetchBranches();\n  }, []);\n  const submitHandler = async data => {\n    data.branchId = selectedBranch;\n\n    // Convert the form data to FormData to handle file upload\n    /*const formData = new FormData();\r\n    Object.keys(data).forEach(key => {\r\n      if (key === 'profileImage') {\r\n        formData.append(key, data[key][0]); // Append the file\r\n      } else if (Array.isArray(data[key])) {\r\n        data[key].forEach((item, index) => {\r\n          formData.append(`${key}[${index}]`, item);\r\n        });\r\n      } else {\r\n        formData.append(key, data[key]);\r\n      }\r\n    });*/\n\n    console.log(data);\n    const response = await fetch(`http://localhost:5000/students/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n  };\n  const resetHandler = () => {\n    console.log(\"in reset\");\n    navigate('/');\n  };\n  const handleBranchChange = event => {\n    alert(event.target.index);\n    setSelectedBranch(event.target.index); // Set selected branchId\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            ...register(\"name\", {\n              required: \"Student name is required.\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 12\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            name: \"email\",\n            ...register(\"email\", {\n              required: \"Email is required.\",\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: \"Email is not valid.\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 10\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phone\",\n            type: \"text\",\n            name: \"phone\",\n            ...register(\"phone\", {\n              required: \"Phone Number is required.\",\n              minLength: {\n                value: 10,\n                message: \"Please enter a valid 10-digit phone number\"\n              },\n              maxLength: {\n                value: 10,\n                message: \"Please enter a valid 10-digit phone number\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: errors.phone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              minWidth: '240px'\n            },\n            htmlFor: \"address\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"address1\",\n              name: \"address1\",\n              ...register(\"address.0\", {\n                required: \"Enter atleast one address field.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"address2\",\n              name: \"address2\",\n              ...register(\"address.1\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"address3\",\n              name: \"address\",\n              ...register(\"address.2\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"  \", errors.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: errors.address.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"branch\",\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"branch\",\n            name: \"branch\",\n            value: selectedBranch,\n            onChange: handleBranchChange,\n            ...register('branch'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: branch.branch_name,\n              children: branch.branch_name\n            }, branch._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: errors.branch.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"monthly_fees\",\n            children: \"Monthly Fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"monthly_fees\",\n            type: \"text\",\n            name: \"monthly_fees\",\n            ...register(\"monthly_fees\", {\n              required: \"PLease enter the fees for this student\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), errors.monthly_fees && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: errors.monthly_fees.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"reset\",\n          onClick: resetHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"submit\",\n          children: isSubmitting ? 'Submitting' : 'Proceed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 1\n  }, this);\n};\n_s(RegistrationForm, \"xl8klVrKaYlycVidhM9aTP96Ie0=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigate","useForm","classes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationForm","onSubmit","_s","imageName","setImageName","branches","setBranches","selectedBranch","setSelectedBranch","register","handleSubmit","formState","errors","isSubmitting","reset","navigate","fetchBranches","response","fetch","data","json","console","log","error","submitHandler","branchId","method","headers","body","JSON","stringify","resetHandler","handleBranchChange","event","alert","target","index","className","container","children","form","control","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","required","message","pattern","value","email","minLength","maxLength","phone","style","minWidth","textAlign","address","onChange","map","branch","branch_name","_id","monthly_fees","marginTop","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/RegistrationForm.js"],"sourcesContent":["import {\r\n  Form,\r\n  Link,\r\n  useSearchParams,\r\n  useActionData,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport classes from './RegistrationForm.module.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst RegistrationForm=({onSubmit})=>{\r\n    const [imageName, setImageName] = useState('Choose Image...');\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n    const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\r\n\r\n\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset\r\n  } = useForm();\r\n\r\nconst navigate= useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n        fetchBranches();\r\n    }, []);\r\n\r\n  const submitHandler =async (data) => {\r\n    data.branchId = selectedBranch;\r\n\r\n\r\n        // Convert the form data to FormData to handle file upload\r\n        /*const formData = new FormData();\r\n        Object.keys(data).forEach(key => {\r\n          if (key === 'profileImage') {\r\n            formData.append(key, data[key][0]); // Append the file\r\n          } else if (Array.isArray(data[key])) {\r\n            data[key].forEach((item, index) => {\r\n              formData.append(`${key}[${index}]`, item);\r\n            });\r\n          } else {\r\n            formData.append(key, data[key]);\r\n          }\r\n        });*/\r\n\r\n console.log(data);\r\n     const response= await fetch(`http://localhost:5000/students/register`, {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(data)\r\n     });\r\n\r\n  console.log(response);      };\r\n\r\n\r\n\r\n\r\n   const resetHandler=()=>{\r\n        console.log(\"in reset\");\r\n        navigate('/');\r\n   };\r\n\r\n\r\n    const handleBranchChange = (event) => {\r\n        alert(event.target.index);\r\n         setSelectedBranch(event.target.index); // Set selected branchId\r\n    };\r\n\r\n   return (\r\n<div className={classes.container}>\r\n     <form onSubmit={handleSubmit(submitHandler)} className={classes.form}>\r\n        <>\r\n\r\n\r\n\r\n         <div className={classes.control}>\r\n           <label htmlFor=\"name\">Student Name</label>\r\n           <input type=\"text\" id=\"name\" name=\"name\"\r\n             {...register(\"name\", { required: \"Student name is required.\" })}  />\r\n          {errors.name && <p className=\"errorMsg\">{errors.name.message}</p>}\r\n         </div>\r\n\r\n        <div className={classes.control}>\r\n         <label htmlFor=\"email\">Email</label>\r\n         <input id=\"email\" type=\"email\" name=\"email\"\r\n         {...register(\"email\", {\r\n               required: \"Email is required.\",\r\n               pattern: {\r\n                 value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                 message: \"Email is not valid.\"\r\n               }\r\n             })}\r\n           />\r\n         {errors.email && <p className=\"errorMsg\">{errors.email.message}</p>}\r\n       </div>\r\n\r\n\r\n         <div className={classes.control}>\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <input\r\n              id=\"phone\"\r\n              type=\"text\"\r\n              name=\"phone\"\r\n               {...register(\"phone\", { required: \"Phone Number is required.\",\r\n                minLength: {\r\n                              value: 10,\r\n                              message: \"Please enter a valid 10-digit phone number\"\r\n                            },\r\n                maxLength: {\r\n                              value: 10,\r\n                              message: \"Please enter a valid 10-digit phone number\"\r\n                            }\r\n                            })}\r\n            />\r\n            {errors.phone && (\r\n                 <p className=\"errorMsg\">{errors.phone.message}</p>)}\r\n          </div>\r\n\r\n\r\n          <div className={classes.control}>\r\n            <label style={{minWidth:'240px'}} htmlFor=\"address\">Address</label>\r\n            <div style={{textAlign:'left'}}>\r\n                  <input  type=\"text\" id=\"address1\" name=\"address1\" {...register(\"address.0\",{ required: \"Enter atleast one address field.\" })} />\r\n                   <input type=\"text\" id=\"address2\" name=\"address2\" {...register(\"address.1\")} />\r\n                   <input type=\"text\" id=\"address3\" name=\"address\" {...register(\"address.2\")} />\r\n                   <div>  {errors.address && (<p className=\"errorMsg\">{errors.address.message}</p>)}</div>\r\n          </div>\r\n          </div>\r\n\r\n        <div className={classes.control}>\r\n              <label htmlFor=\"branch\">Branch</label>\r\n              <select\r\n                id=\"branch\"\r\n                name=\"branch\" value={selectedBranch} onChange={handleBranchChange}\r\n                {...register('branch')}\r\n              >\r\n                <option value=\"\">Select a Branch</option>\r\n                {branches && branches.map((branch) => (\r\n                  <option key={branch._id} value={branch.branch_name}>\r\n                    {branch.branch_name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n            </div>\r\n\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"monthly_fees\">Monthly Fees</label>\r\n                <input\r\n                  id=\"monthly_fees\"\r\n                  type=\"text\"\r\n                  name=\"monthly_fees\"\r\n                   {...register(\"monthly_fees\", { required: \"PLease enter the fees for this student\"})}\r\n                />\r\n                {errors.monthly_fees && (\r\n                     <p className=\"errorMsg\">{errors.monthly_fees.message}</p>)}\r\n              </div>\r\n      </>\r\n\r\n       <div style={{marginTop:'20px'}}>\r\n         <button className={classes.button} type=\"reset\" onClick={resetHandler}>\r\n           Cancel\r\n         </button>\r\n         <button className={classes.button} type=\"submit\" >\r\n           {isSubmitting? 'Submitting': 'Proceed'}\r\n         </button>\r\n        </div>\r\n\r\n\r\n     </form>\r\n    </div>\r\n\r\n   )\r\n\r\n}\r\nexport default RegistrationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}