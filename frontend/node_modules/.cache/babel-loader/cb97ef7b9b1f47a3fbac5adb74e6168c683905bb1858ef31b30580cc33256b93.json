{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\FeesPaymentForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigate } from 'react-router-dom';\nimport { useLocation, useParams, NavLink } from 'react-router-dom';\nimport { useForm, setValue } from 'react-hook-form';\nimport classes from './RegistrationForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeesPaymentForm = () => {\n  _s();\n  var _formData$address;\n  const [branches, setBranches] = useState([]); // State to hold branch names\n  const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\n  const [students, setStudents] = useState([]); // State to hold student names\n  const [selectedStudent, setSelectedStudent] = useState(null); // State to store selected studentId\n  const [studentName, setStudentName] = useState(''); //state to hold student name in case of parameter studentId\n  const [branchName, setBranchName] = useState(''); //state to hold branch name in case of parameter studentId\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [monthNumber, setMonthNumber] = useState(null);\n  const [amountDue, setAmountDue] = useState(null);\n  const [amountPaid, setAmountPaid] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [paymentDate, setPaymentDate] = useState(null);\n  const [refresh, setRefresh] = useState(false); // State to trigger re-fetch and re-render component\n  const [waivingFees, setWaivingFees] = useState(false);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: [],\n    monthly_fees: '',\n    payments: [],\n    reminder_enabled: null\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const {\n    studentId\n  } = useParams();\n  const location = useLocation();\n  const isReminder = location.pathname === '/feesPayment/reminder';\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBranchStudents = async () => {\n      if (selectedBranch === '0') {\n        fetchStudents();\n      }\n      if (selectedBranch) {\n        try {\n          const response = await fetch(`http://localhost:5000/students/branch/${selectedBranch}`);\n          const {\n            students\n          } = await response.json();\n          setStudents(students);\n        } catch (error) {\n          console.error('Error fetching branch students:', error);\n        }\n      }\n    };\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/students`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          students\n        } = await response.json();\n        console.log(students);\n        setStudents(students);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    const fetchStudent = async student_id => {\n      try {\n        const response = await fetch(`http://localhost:5000/students/${student_id}`);\n        const {\n          student\n        } = await response.json();\n        console.log(student === null || student === void 0 ? void 0 : student.reminder_enabled);\n        if (student) {\n          setFormData({\n            name: student.name,\n            email: student.email,\n            phone: student.phone,\n            address: student.address,\n            monthly_fees: student.monthly_fees,\n            payments: student.payments,\n            reminder_enabled: student.reminder_enabled\n          });\n          if (monthNumber) {\n            setSelectedMonth(selectedMonth);\n            const paymentData = student.payments[monthNumber - 1]; // Adjusting for zero-based index\n            console.log(paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_due);\n            setAmountDue((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_due) || 0);\n            setAmountPaid((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_paid) || 0);\n          }\n          if (student !== null && student !== void 0 && student.branch_id) {\n            const branchResp = await fetch(`http://localhost:5000/branches/${student.branch_id}`);\n            const {\n              branch\n            } = await branchResp.json();\n            setBranchName(branch === null || branch === void 0 ? void 0 : branch.branch_name);\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              branch: branch === null || branch === void 0 ? void 0 : branch.branch_name\n            }));\n          }\n        }\n        setRefresh(false);\n        setWaivingFees(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (studentId || selectedStudent) fetchStudent(studentId || selectedStudent);else {\n      fetchBranches();\n      //fetchStudents();\n      if (selectedBranch) fetchBranchStudents();else setStudents(null);\n    }\n  }, [studentId, selectedBranch, refresh]);\n  const submitHandler = async data => {\n    console.log(data);\n    data.studentId = studentId || selectedStudent;\n    data.monthNumber = monthNumber;\n    data.mode = selectedMode;\n    data.paymentDate = paymentDate;\n    console.log(data);\n    let response;\n    response = await fetch(`http://localhost:5000/payment/fees`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n    alert('Fees Updated');\n    navigate('/students');\n  };\n  const resetHandler = event => {\n    if (!selectedStudent && !studentId) navigate(`/homepage`);else {\n      setSelectedStudent(null);\n      navigate(`/feesPayment`);\n    }\n  };\n  const handleBranchChange = async event => {\n    setSelectedBranch(event.target.value); // Set selected branchId\n    console.log(selectedBranch);\n  };\n  const handleStudentChange = event => {\n    event.preventDefault();\n    setSelectedStudent(event.target.value); // Set selected studentId\n    //if(selectedStudent)\n    navigate(`/feesPayment/${event.target.value}`);\n  };\n  const setMonthData = monthIndex => {\n    const paymentData = formData.payments[monthIndex - 1]; // Adjusting for zero-based index\n\n    //setMonthNumber(monthIndex);\n    //setSelectedMonth(paymentData?.month || \"\"); // Replace with actual month if available\n    setAmountDue((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_due) || 0);\n    setAmountPaid((paymentData === null || paymentData === void 0 ? void 0 : paymentData.amount_paid) || 0);\n  };\n  const handleMonthChange = event => {\n    var _formData$payments, _formData$payments2, _formData$payments3;\n    setMonthNumber(event.target.selectedIndex);\n    setSelectedMonth(event.target.value);\n    console.log((_formData$payments = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments === void 0 ? void 0 : _formData$payments.amount_due);\n    setAmountDue((_formData$payments2 = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments2 === void 0 ? void 0 : _formData$payments2.amount_due);\n    setAmountPaid((_formData$payments3 = formData.payments[event.target.selectedIndex - 1]) === null || _formData$payments3 === void 0 ? void 0 : _formData$payments3.amount_paid);\n  };\n  const handleModeChange = event => {\n    setSelectedMode(event.target.value); // Set selected Mode\n  };\n  const handleDateChange = event => {\n    setPaymentDate(event.target.value);\n  };\n  const waiveFeesHAndler = async event => {\n    setWaivingFees(true);\n    const waiveyn = window.confirm(`Waive off fees of Rs.${amountDue}/- for ${selectedMonth}`);\n    if (!waiveyn) return;\n    const student_id = studentId || selectedStudent;\n    //const month=monthNumber+1;\n    const response = await fetch(`http://localhost:5000/students/waivefees`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        studentId: student_id,\n        month: monthNumber\n      })\n    });\n    console.log(response);\n    if (response.ok) {\n      alert(`Waived off fees for ${selectedMonth}`);\n      setRefresh(true);\n    }\n  };\n  const reminderHandler = async () => {\n    try {\n      const new_reminder_enabled = !formData.reminder_enabled;\n      const student_id = studentId || selectedStudent;\n      const response = await fetch(`http://localhost:5000/students/reminder/${student_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reminder_enabled: new_reminder_enabled\n        })\n      });\n      if (response.ok) {\n        setRefresh(true);\n      }\n    } catch (err) {\n      console.error('Failed to update reminder status:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      className: classes.form,\n      style: {\n        border: '2px solid grey'\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: studentId || selectedStudent ? isReminder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.fields,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notificationMsg\",\n              children: \"Notification Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                overflowY: 'auto'\n              },\n              id: \"notificationMsg\",\n              type: \"text\",\n              name: \"notificationMsg\",\n              rows: \"4\",\n              ...register(\"notificationMsg\", {\n                required: \"Notification Message is required.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }, this), errors.notificationMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.notificationMsg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              border: '2px solid grey'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '25%',\n                textAlign: 'left',\n                marginTop: '20px',\n                marginLeft: '25px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Email:  \", formData.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Phone:  \", formData.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Monthly Fees: Rs. \", formData.monthly_fees]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '30%',\n                textAlign: 'left',\n                fontSize: '20px',\n                fontWeight: 'bold'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"right\",\n                marginRight: '25px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Branch:    \", formData.branch]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  fontSize: \"16px\",\n                  fontFamily: \"inherit\",\n                  textAlign: 'left'\n                },\n                children: [\"Address:   \", (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.join('\\n')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '40px',\n                marginLeft: '100px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"mode\",\n                children: \"Payment for:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"month\",\n                name: \"month\",\n                ...register(\"month\", {\n                  required: true\n                }),\n                value: selectedMonth,\n                onChange: handleMonthChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 17\n                }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: month,\n                  children: month\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 17\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 15\n              }, this), errors.month && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Please select the Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 8\n            }, this), selectedMonth && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Amount Due: Rs. \", amountDue, \"/-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Amount Paid: Rs. \", amountPaid, \"/-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 10\n              }, this), amountDue > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    fontSize: '12px',\n                    marginTop: '20px'\n                  },\n                  onClick: waiveFeesHAndler,\n                  children: \"Waive Fees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            ...register(\"monthNumber\"),\n            value: monthNumber || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 9\n          }, this), selectedMonth ? amountDue !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                fontSize: '20px',\n                fontWeight: 'bold',\n                marginTop: '5px',\n                marginBottom: '5px'\n              },\n              children: \"Please enter Payment Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                height: '40%',\n                paddingTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '100px',\n                  marginRight: '70px',\n                  marginBottom: '50px',\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    minWidth: '150px',\n                    display: 'inline-block'\n                  },\n                  htmlFor: \"paymentDate\",\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  style: {\n                    width: '150px',\n                    height: '25px'\n                  },\n                  type: \"date\",\n                  id: \"paymentDate\",\n                  ...register(\"paymentDate\", {\n                    required: true\n                  }),\n                  name: \"paymentDate\",\n                  value: paymentDate,\n                  onChange: handleDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 15\n                }, this), !waivingFees && errors.paymentDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"errorMsg\",\n                  children: \"Select Date of Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '100px',\n                  marginRight: '70px',\n                  marginBottom: '50px',\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    minWidth: '150px',\n                    display: 'inline-block'\n                  },\n                  htmlFor: \"amount\",\n                  children: \"Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 15\n                }, this), \"Rs \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  style: {\n                    width: '50px',\n                    height: '15px'\n                  },\n                  type: \"text\",\n                  id: \"amount\",\n                  ...register(\"amount\", {\n                    required: \"Enter Amount\",\n                    validate: {\n                      notZero: value => Number(value) > 0 || \"Amount must be greater than zero\",\n                      isNumber: value => !isNaN(value) || \"Amount must be a valid number\"\n                    }\n                  }),\n                  name: \"amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 18\n                }, this), !waivingFees && errors.amount && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"errorMsg\",\n                  children: errors.amount.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '100px',\n                  marginRight: '70px',\n                  marginBottom: '50px',\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    minWidth: '150px',\n                    display: 'inline-block'\n                  },\n                  htmlFor: \"mode\",\n                  children: \"Mode of Payment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"mode\",\n                  ...register(\"mode\", {\n                    required: true\n                  }),\n                  name: \"mode\",\n                  value: selectedMode,\n                  onChange: handleModeChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Mode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"cash\",\n                    children: \"Cash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"upi\",\n                    children: \"UPI\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"card\",\n                    children: \"Card\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 14\n                }, this), !waivingFees && errors.mode && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"errorMsg\",\n                  children: \"Select Mode of Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Dues for this month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Please select the month for payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '50px',\n            marginBottom: '50px',\n            marginLeft: '100px',\n            width: '80%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '100px'\n              },\n              htmlFor: \"branch\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"branch\",\n              name: \"branch\",\n              value: selectedBranch,\n              onChange: handleBranchChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"All Branches\"\n              }, '0', false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 13\n              }, this), branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: branch._id,\n                children: branch.branch_name\n              }, branch._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                width: '100px'\n              },\n              htmlFor: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"student\",\n              name: \"student\",\n              value: selectedStudent,\n              onChange: handleStudentChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 13\n              }, this), students && students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: student._id,\n                children: student.name\n              }, student._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.student.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 9\n        }, this)\n      }, void 0, false), selectedMonth && amountDue !== 0 && (studentId || selectedStudent) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '100px',\n          marginBottom: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginRight: '10px'\n          },\n          className: classes.button,\n          onClick: resetHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"submit\",\n          children: isSubmitting ? 'Submitting' : 'Proceed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: '30px',\n          marginBottom: '30px',\n          marginRight: '10px',\n          marginLeft: '10px'\n        },\n        children: [(studentId || selectedStudent) && (formData.reminder_enabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              textDecoration: 'none'\n            },\n            onClick: reminderHandler,\n            children: \"Disable Reminders \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 73\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              textDecoration: 'none'\n            },\n            onClick: reminderHandler,\n            children: \"Enable Reminders \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 19\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              textDecoration: 'none'\n            },\n            onClick: resetHandler,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 6\n  }, this);\n};\n_s(FeesPaymentForm, \"hrcz59eQJyxrhRGd40l6E0PP8mA=\", false, function () {\n  return [useForm, useParams, useLocation, useNavigate];\n});\n_c = FeesPaymentForm;\nexport default FeesPaymentForm;\nvar _c;\n$RefreshReg$(_c, \"FeesPaymentForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigate","useLocation","useParams","NavLink","useForm","setValue","classes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeesPaymentForm","_s","_formData$address","branches","setBranches","selectedBranch","setSelectedBranch","students","setStudents","selectedStudent","setSelectedStudent","studentName","setStudentName","branchName","setBranchName","selectedMonth","setSelectedMonth","monthNumber","setMonthNumber","amountDue","setAmountDue","amountPaid","setAmountPaid","amount","setAmount","selectedMode","setSelectedMode","paymentDate","setPaymentDate","refresh","setRefresh","waivingFees","setWaivingFees","months","formData","setFormData","name","email","phone","address","monthly_fees","payments","reminder_enabled","register","handleSubmit","formState","errors","isSubmitting","reset","studentId","location","isReminder","pathname","navigate","fetchBranchStudents","fetchStudents","response","fetch","json","error","console","fetchBranches","data","log","method","headers","fetchStudent","student_id","student","paymentData","amount_due","amount_paid","branch_id","branchResp","branch","branch_name","prevFormData","submitHandler","mode","body","JSON","stringify","alert","resetHandler","event","handleBranchChange","target","value","handleStudentChange","preventDefault","setMonthData","monthIndex","handleMonthChange","_formData$payments","_formData$payments2","_formData$payments3","selectedIndex","handleModeChange","handleDateChange","waiveFeesHAndler","waiveyn","window","confirm","month","ok","reminderHandler","new_reminder_enabled","err","className","container","children","onSubmit","form","style","border","fields","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","id","type","rows","required","notificationMsg","message","control","display","justifyContent","width","textAlign","marginTop","marginLeft","fontSize","fontWeight","marginRight","fontFamily","join","marginBottom","minWidth","onChange","map","index","onClick","height","paddingTop","validate","notZero","Number","isNumber","isNaN","_id","button","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/FeesPaymentForm.js"],"sourcesContent":["\r\nimport {\r\n  Form,\r\n  Link,\r\n  useSearchParams,\r\n  useActionData,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport {useLocation, useParams, NavLink} from 'react-router-dom';\r\nimport { useForm, setValue } from 'react-hook-form';\r\nimport classes from './RegistrationForm.module.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst FeesPaymentForm=()=>{\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n    const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\r\n    const [students, setStudents] = useState([]); // State to hold student names\r\n    const [selectedStudent, setSelectedStudent] = useState(null); // State to store selected studentId\r\n    const [studentName,setStudentName]=useState('');    //state to hold student name in case of parameter studentId\r\n    const [branchName, setBranchName]=useState('');     //state to hold branch name in case of parameter studentId\r\n    const [selectedMonth, setSelectedMonth] = useState(null);\r\n    const [monthNumber, setMonthNumber] = useState(null);\r\n    const [amountDue, setAmountDue]=useState(null);\r\n    const [amountPaid, setAmountPaid]=useState(null);\r\n    const [amount, setAmount]=useState(null);\r\n    const [selectedMode, setSelectedMode]=useState(null);\r\n    const [paymentDate, setPaymentDate]=useState(null);\r\n    const [refresh, setRefresh] = useState(false); // State to trigger re-fetch and re-render component\r\n    const [waivingFees, setWaivingFees] =useState(false);\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n    const [formData, setFormData] = useState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          address: [],\r\n          monthly_fees: '',\r\n          payments:[],\r\n          reminder_enabled:null\r\n        });\r\n\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset\r\n  } = useForm();\r\n\r\n    const { studentId } = useParams();\r\n    const location = useLocation();\r\n    const isReminder = location.pathname === '/feesPayment/reminder';\r\n    const navigate= useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchBranchStudents = async() =>{\r\n        if(selectedBranch==='0'){\r\n            fetchStudents();\r\n        }\r\n        if (selectedBranch) {\r\n            try{\r\n                const response=await fetch(`http://localhost:5000/students/branch/${selectedBranch}`);\r\n                const {students} =await response.json();\r\n                setStudents(students);\r\n            }\r\n            catch (error) {\r\n                console.error('Error fetching branch students:', error);\r\n            }\r\n         }\r\n       }\r\n\r\n      const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n\r\n    const fetchStudents=async()=>{\r\n      try{\r\n           const response=await fetch(`http://localhost:5000/students`,{\r\n                 method:'GET',\r\n                 headers:{\r\n                     'Content-Type':'application/json',\r\n                     }\r\n                 });\r\n\r\n           const {students}=await response.json();\r\n           console.log(students);\r\n           setStudents(students);\r\n       }\r\n       catch(error){\r\n        console.error('Error fetching students:', error);\r\n       }\r\n      };\r\n\r\n      const fetchStudent=async(student_id)=>{\r\n            try{\r\n                 const response=await fetch(`http://localhost:5000/students/${student_id}`);\r\n                 const {student}=await response.json();\r\n                 console.log(student?.reminder_enabled);\r\n                 if(student){\r\n                    setFormData({\r\n                            name: student.name,\r\n                            email: student.email,\r\n                            phone: student.phone,\r\n                            address: student.address,\r\n                            monthly_fees: student.monthly_fees,\r\n                            payments: student.payments,\r\n                            reminder_enabled: student.reminder_enabled\r\n                          });\r\n                if(monthNumber){\r\n                    setSelectedMonth(selectedMonth);\r\n                    const paymentData = student.payments[monthNumber - 1]; // Adjusting for zero-based index\r\n                    console.log(paymentData?.amount_due);\r\n                    setAmountDue(paymentData?.amount_due || 0);\r\n                    setAmountPaid(paymentData?.amount_paid || 0);\r\n                 }\r\n                 if (student?.branch_id) {\r\n                    const branchResp=await fetch(`http://localhost:5000/branches/${student.branch_id}`);\r\n                    const {branch}=await branchResp.json();\r\n                    setBranchName(branch?.branch_name);\r\n\r\n                    setFormData((prevFormData) => ({\r\n                      ...prevFormData,\r\n                      branch: branch?.branch_name\r\n                    }));\r\n                 }\r\n\r\n             }\r\n             setRefresh(false);\r\n             setWaivingFees(false);\r\n             }\r\n             catch(error){\r\n                 console.log(error);\r\n             }\r\n\r\n       };\r\n      if (studentId || selectedStudent)\r\n         fetchStudent(studentId||selectedStudent);\r\n      else{\r\n          fetchBranches();\r\n          //fetchStudents();\r\n          if(selectedBranch) fetchBranchStudents()\r\n          else setStudents(null);\r\n      }\r\n\r\n    }, [studentId, selectedBranch, refresh]);\r\n\r\n\r\n\r\n  const submitHandler =async (data) => {\r\n      console.log(data);\r\n\r\n    data.studentId = studentId || selectedStudent;\r\n    data.monthNumber = monthNumber;\r\n    data.mode=selectedMode;\r\n    data.paymentDate=paymentDate;\r\n\r\n    console.log(data);\r\n    let response;\r\n      response= await fetch(`http://localhost:5000/payment/fees`, {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(data)\r\n     });\r\n\r\n      console.log(response);\r\n      alert('Fees Updated');\r\n      navigate('/students');\r\n  };\r\n\r\n\r\n   const resetHandler=(event)=>{\r\n    if(!selectedStudent && !studentId)\r\n        navigate(`/homepage`);\r\n    else{\r\n        setSelectedStudent(null);\r\n        navigate(`/feesPayment`);\r\n    }\r\n   };\r\n\r\n\r\n    const handleBranchChange = async(event) => {\r\n         setSelectedBranch(event.target.value); // Set selected branchId\r\n         console.log(selectedBranch);\r\n    };\r\n\r\n    const handleStudentChange = (event) => {\r\n         event.preventDefault();\r\n         setSelectedStudent(event.target.value); // Set selected studentId\r\n         //if(selectedStudent)\r\n            navigate(`/feesPayment/${event.target.value}`);\r\n    };\r\n\r\n    const setMonthData = (monthIndex) => {\r\n        const paymentData = formData.payments[monthIndex - 1]; // Adjusting for zero-based index\r\n\r\n        //setMonthNumber(monthIndex);\r\n        //setSelectedMonth(paymentData?.month || \"\"); // Replace with actual month if available\r\n        setAmountDue(paymentData?.amount_due || 0);\r\n        setAmountPaid(paymentData?.amount_paid || 0);\r\n    };\r\n\r\n    const handleMonthChange = (event) => {\r\n        setMonthNumber(event.target.selectedIndex);\r\n        setSelectedMonth(event.target.value);\r\n        console.log(formData.payments[event.target.selectedIndex-1]?.amount_due);\r\n        setAmountDue(formData.payments[event.target.selectedIndex-1]?.amount_due);\r\n        setAmountPaid(formData.payments[event.target.selectedIndex-1]?.amount_paid);\r\n    };\r\n\r\n    const handleModeChange = (event) => {\r\n        setSelectedMode(event.target.value); // Set selected Mode\r\n    };\r\n\r\n    const handleDateChange = (event) => {\r\n        setPaymentDate(event.target.value);\r\n     };\r\n\r\n    const waiveFeesHAndler = async(event) => {\r\n        setWaivingFees(true);\r\n        const waiveyn=window.confirm(`Waive off fees of Rs.${amountDue}/- for ${selectedMonth}`);\r\n        if(!waiveyn) return;\r\n        const student_id=studentId || selectedStudent;\r\n        //const month=monthNumber+1;\r\n        const response=await fetch(`http://localhost:5000/students/waivefees`,{\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({studentId:student_id,month:monthNumber})\r\n        });\r\n        console.log(response);\r\n        if(response.ok){\r\n            alert(`Waived off fees for ${selectedMonth}`);\r\n            setRefresh(true);\r\n        }\r\n    };\r\n\r\n    const reminderHandler=async()=>{\r\n      try{\r\n        const new_reminder_enabled=!formData.reminder_enabled;\r\n        const student_id=studentId || selectedStudent;\r\n        const response= await fetch(`http://localhost:5000/students/reminder/${student_id}`, {\r\n          method: 'PUT',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({reminder_enabled:new_reminder_enabled})\r\n        });\r\n        if(response.ok){\r\n            setRefresh(true);\r\n        }\r\n      }\r\n      catch (err) {\r\n          console.error('Failed to update reminder status:', err);\r\n      }\r\n    }\r\n\r\n   return (\r\n     <div className={classes.container}>\r\n\r\n     <form onSubmit={handleSubmit(submitHandler)} className={classes.form} style={{ border:'2px solid grey'}}>\r\n     <>\r\n\r\n     {(studentId || selectedStudent) ? (\r\n        isReminder?(<>\r\n            <div className={classes.fields}>\r\n            <label htmlFor=\"notificationMsg\">Notification Message</label>\r\n            <textarea  style={{overflowY:'auto'}} id=\"notificationMsg\" type=\"text\" name=\"notificationMsg\" rows=\"4\"\r\n            {...register(\"notificationMsg\", {\r\n                  required: \"Notification Message is required.\",\r\n\r\n                })}\r\n              />\r\n            {errors.notificationMsg && <p className=\"errorMsg\">{errors.notificationMsg.message}</p>}\r\n            </div>\r\n\r\n        </>):(<>\r\n\r\n        <div className={classes.control} style={{ display: \"flex\", justifyContent: \"space-between\",  border:'2px solid grey'}}>\r\n            <div style={{width:'25%', textAlign:'left', marginTop:'20px', marginLeft:'25px'}} >\r\n                <div style={{textAlign:'left'}}>Email:  {formData.email}</div>\r\n                <div style={{textAlign:'left'}}>Phone:  {formData.phone}</div>\r\n                <div style={{textAlign:'left'}}>Monthly Fees: Rs. {formData.monthly_fees}</div>\r\n\r\n            </div>\r\n            <div style={{width:'30%',textAlign:'left',fontSize:'20px',fontWeight:'bold'}}>\r\n                       <p>{formData.name}</p>\r\n                     </div>\r\n            <div style={{textAlign: \"right\", marginRight:'25px'}} >\r\n                <div  style={{textAlign:'left'}}>Branch:    {formData.branch}</div>\r\n                <pre style={{ fontSize: \"16px\", fontFamily: \"inherit\",  textAlign:'left' }}>Address:   {formData.address?.join('\\n')}</pre>\r\n            </div>\r\n        </div>\r\n\r\n        <div style={{width:'100%', display:'flex'}}>\r\n       <div style={{marginTop:'40px', marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n                     <label style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"mode\">Payment for:</label>\r\n              <select\r\n                id=\"month\"\r\n                name=\"month\"\r\n                {...register(\"month\", { required: true })}\r\n                value={selectedMonth} onChange={handleMonthChange}>\r\n\r\n                <option value=\"\">Select Month</option>\r\n                {months.map((month, index) => (\r\n                <option key={index} value={month}>\r\n                  {month}\r\n                </option>\r\n              ))}\r\n             </select>\r\n            {errors.month && <p className=\"errorMsg\">Please select the Month</p>}\r\n\r\n         </div>\r\n        {selectedMonth && (<>\r\n         <div style={{width:'30%'}}>\r\n            <p>Amount Due: Rs. {amountDue}/-</p>\r\n         </div>\r\n         <div style={{width:'30%'}}>\r\n            <p>Amount Paid: Rs. {amountPaid}/-</p>\r\n         </div>\r\n         {amountDue>0 && <div style={{width:'30%'}}>\r\n            <button style={{fontSize:'12px', marginTop:'20px'}} onClick={waiveFeesHAndler}>Waive Fees</button>\r\n         </div>}\r\n         </>)}\r\n        </div>\r\n        <input type=\"hidden\" {...register(\"monthNumber\")} value={monthNumber || ''} />\r\n        <hr/>\r\n        {selectedMonth ? (amountDue!==0) ? (<>\r\n        <div style={{textAlign:'center', fontSize:'20px', fontWeight:'bold', marginTop:'5px', marginBottom:'5px'}}>\r\n        Please enter Payment Details</div>\r\n        <div style={{width:'100%', height:'40%',paddingTop:'20px'}}>\r\n               <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"paymentDate\">Date:</label>\r\n              <input\r\n                  style={{ width: '150px', height: '25px' }}\r\n                  type=\"date\"\r\n                  id=\"paymentDate\"\r\n                  {...register(\"paymentDate\", { required: true })}\r\n                  name=\"paymentDate\"\r\n                  value={paymentDate}\r\n                  onChange={handleDateChange}\r\n                  />\r\n            {!waivingFees && errors.paymentDate && <p className=\"errorMsg\">Select Date of Payment</p>}\r\n\r\n              </div>\r\n              <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"amount\">Amount:</label>\r\n              Rs <input style={{width:'50px',height:'15px'}} type=\"text\" id=\"amount\"\r\n              {...register(\"amount\", { required: \"Enter Amount\",\r\n               validate: {\r\n                       notZero: (value) => Number(value) > 0 || \"Amount must be greater than zero\",\r\n                       isNumber: (value) => !isNaN(value) || \"Amount must be a valid number\",\r\n                     }\r\n               })}\r\n              name=\"amount\"/>\r\n            {!waivingFees && errors.amount && <p className=\"errorMsg\">{errors.amount.message}</p>}\r\n\r\n              </div>\r\n              <div style={{marginLeft:'100px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"mode\">Mode of Payment:</label>\r\n             <select\r\n                id=\"mode\"\r\n                {...register(\"mode\", { required: true })}\r\n                name=\"mode\" value={selectedMode} onChange={handleModeChange}>\r\n\r\n                <option value=\"\">Select Mode</option>\r\n                  <option  value=\"cash\">\r\n                    Cash\r\n                  </option>\r\n                  <option  value=\"upi\">\r\n                   UPI\r\n                  </option>\r\n                  <option  value=\"card\">\r\n                    Card\r\n                  </option>\r\n              </select>\r\n            {!waivingFees && errors.mode && <p className=\"errorMsg\">Select Mode of Payment</p>}\r\n              </div>\r\n        </div>\r\n        </>\r\n        ):\r\n        <div>No Dues for this month</div>:<div>Please select the month for payment</div>\r\n        }\r\n        </>)\r\n      ):(\r\n        <div style={{display:'flex', marginTop:'50px',marginBottom:'50px', marginLeft:'100px', width:'80%'}}>\r\n        <div className={classes.control}>\r\n          <label style={{width:'100px'}} htmlFor=\"branch\">Branch</label>\r\n          <select\r\n            id=\"branch\"\r\n            name=\"branch\" value={selectedBranch} onChange={handleBranchChange}>\r\n\r\n            <option value=\"\">Select a Branch</option>\r\n            <option key='0' value='0'>\r\n                All Branches\r\n             </option>\r\n            {branches && branches.map((branch) => (\r\n              <option key={branch._id} value={branch._id}>\r\n                {branch.branch_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label  style={{width:'100px'}} htmlFor=\"student\">Student</label>\r\n          <select\r\n            id=\"student\"\r\n            name=\"student\" value={selectedStudent} onChange={handleStudentChange}>\r\n\r\n            <option value=\"\">Select a Student</option>\r\n            {students && students.map((student) => (\r\n              <option key={student._id} value={student._id}>\r\n                {student.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          { errors.branch && <p className=\"errorMsg\">{errors.student.message}</p>}\r\n        </div>\r\n        </div>\r\n      )}\r\n      </>\r\n    {\r\n        (selectedMonth && amountDue!==0 && (studentId || selectedStudent)) &&\r\n       (<div style={{marginTop:'100px', marginBottom:'50px'}}>\r\n         <button style={{ marginRight:'10px'}} className={classes.button}  onClick={resetHandler}>\r\n           Cancel\r\n         </button>\r\n         <button className={classes.button} type=\"submit\" >\r\n           {isSubmitting? 'Submitting': 'Proceed'}\r\n         </button>\r\n\r\n        </div>)}\r\n\r\n\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\",\r\n    marginTop:'30px',marginBottom:'30px', marginRight:'10px', marginLeft:'10px'}}>\r\n\r\n        {(studentId || selectedStudent) && (formData.reminder_enabled ? <div><NavLink style={{textDecoration:'none'}} onClick={reminderHandler}>\r\n                  Disable Reminders </NavLink></div> :\r\n                  <div><NavLink style={{textDecoration:'none'}}\r\n                  onClick={reminderHandler}>Enable Reminders </NavLink></div> )}\r\n\r\n        <div>\r\n        <NavLink style={{textDecoration:'none'}} onClick={resetHandler}><span>Back</span></NavLink></div>\r\n     </div>\r\n     </form>\r\n    </div>\r\n\r\n   )\r\n\r\n}\r\nexport default FeesPaymentForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}