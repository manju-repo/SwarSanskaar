{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\components\\\\FeesPaymentForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useSearchParams, useActionData, useNavigate } from 'react-router-dom';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useForm, setValue } from 'react-hook-form';\nimport classes from './RegistrationForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeesPaymentForm = () => {\n  _s();\n  var _formData$address;\n  const [branches, setBranches] = useState([]); // State to hold branch names\n  const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\n  const [students, setStudents] = useState([]); // State to hold student names\n  const [selectedStudent, setSelectedStudent] = useState(''); // State to store selected studentId\n  const [studentName, setStudentName] = useState(''); //state to hold student name in case of parameter studentId\n  const [branchName, setBranchName] = useState(''); //state to hold branch name in case of parameter studentId\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [amountDue, setAmountDue] = useState(null);\n  const [amountPaid, setAmountPaid] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [paymentDate, setPaymentDate] = useState(null);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: [],\n    monthly_fees: '',\n    payments: []\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    reset\n  } = useForm();\n  const {\n    studentId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\n        const data = await response.json();\n        console.log(data.branches);\n        setBranches(data.branches); // Assuming data is an array of branch names\n      } catch (error) {\n        console.error('Error fetching branches:', error);\n      }\n    };\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/students`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          students\n        } = await response.json();\n        console.log(students);\n        setStudents(students);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const fetchStudent = async () => {\n      if (studentId) {\n        try {\n          const response = await fetch(`http://localhost:5000/students/${studentId}`);\n          const {\n            student\n          } = await response.json();\n          console.log(student);\n          if (student) {\n            setFormData({\n              name: student.name,\n              email: student.email,\n              phone: student.phone,\n              address: student.address,\n              monthly_fees: student.monthly_fees,\n              payments: student.payments\n            });\n          }\n          if (student !== null && student !== void 0 && student.branch_id) {\n            const branchResp = await fetch(`http://localhost:5000/branches/${student.branch_id}`);\n            const {\n              branch\n            } = await branchResp.json();\n            setBranchName(branch === null || branch === void 0 ? void 0 : branch.branch_name);\n            setFormData(prevFormData => ({\n              ...prevFormData,\n              branch: branch === null || branch === void 0 ? void 0 : branch.branch_name\n            }));\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    if (studentId) fetchStudent();else {\n      fetchBranches();\n      fetchStudents();\n    }\n  }, []);\n  const submitHandler = async data => {\n    console.log(data);\n    data.studentId = selectedBranch;\n    data.month = selectedMonth;\n    data.amount = amount;\n    data.mode = selectedMode;\n    data.paymentDate = paymentDate;\n    console.log(data);\n    let response;\n    response = await fetch(`http://localhost:5000/payment/${studentId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(response);\n    alert('Fees Updated');\n    //navigate('/students');\n  };\n  const resetHandler = () => {\n    window.history.back();\n  };\n  const handleBranchChange = event => {\n    setSelectedBranch(event.target.value); // Set selected branchId\n  };\n  const handleStudentChange = event => {\n    setSelectedStudent(event.target.value); // Set selected studentId\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n    console.log(formData.payments[event.target.selectedIndex - 1].amount_paid);\n    setAmountDue(formData.payments[event.target.selectedIndex - 1].amount_due);\n    setAmountPaid(formData.payments[event.target.selectedIndex - 1].amount_paid);\n  };\n  const handleModeChange = event => {\n    setSelectedMode(event.target.value); // Set selected Mode\n  };\n  const handleDateChange = event => {\n    setPaymentDate(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      className: classes.form,\n      style: {\n        border: '2px solid grey'\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: studentId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              textAlign: 'center',\n              fontSize: '20px',\n              fontWeight: 'bold',\n              border: '2px solid grey'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              border: '2px solid grey'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '50%',\n                textAlign: 'left',\n                marginTop: '20px',\n                marginLeft: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Email:  \", formData.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Phone:  \", formData.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Monthly Fees: Rs. \", formData.monthly_fees]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Branch:    \", formData.branch]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  fontSize: \"16px\",\n                  fontFamily: \"inherit\",\n                  textAlign: 'left'\n                },\n                children: [\"Address:   \", (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.join('\\n')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '20px',\n                marginBottom: '20px',\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  marginRight: '15px'\n                },\n                htmlFor: \"month\",\n                children: \"Payment for\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"month\",\n                name: \"month\",\n                ...register(\"month\", {\n                  required: true\n                }),\n                value: selectedMonth,\n                onChange: handleMonthChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: month,\n                  children: month\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 17\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 9\n            }, this), selectedMonth && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '40%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Amount Due: Rs. \", amountDue, \"/-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '40%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Amount Paid: Rs. \", amountPaid, \"/-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '1px solid blue',\n              width: '80%',\n              height: '40%',\n              marginLeft: '75px',\n              paddingTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '300px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"amount\",\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: '150px',\n                  height: '25px'\n                },\n                type: \"date\",\n                id: \"paymentDate\",\n                name: \"paymentDate\",\n                value: paymentDate,\n                onChange: handleDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '300px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"amount\",\n                children: \"Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 15\n              }, this), \"Rs \", /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: '50px',\n                  height: '15px'\n                },\n                type: \"text\",\n                id: \"amount\",\n                name: \"amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '300px',\n                marginRight: '70px',\n                marginBottom: '50px',\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  minWidth: '150px',\n                  display: 'inline-block'\n                },\n                htmlFor: \"mode\",\n                children: \"Mode of Payment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"mode\",\n                name: \"mode\",\n                value: selectedMode,\n                onChange: handleModeChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cash\",\n                  children: \"Cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"upi\",\n                  children: \"UPI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"card\",\n                  children: \"Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"branch\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"branch\",\n              name: \"branch\",\n              value: selectedBranch,\n              onChange: handleBranchChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 13\n              }, this), branches && branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: branch._id,\n                children: branch.branch_name\n              }, branch._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"student\",\n              name: \"student\",\n              value: selectedStudent,\n              onChange: handleStudentChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 13\n              }, this), students && students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: student.name,\n                children: student.name\n              }, student._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 11\n            }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: errors.branch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '200px',\n          justifyContent: 'space-between',\n          width: '1000px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginRight: '20px'\n          },\n          className: classes.button,\n          type: \"reset\",\n          onClick: resetHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          type: \"submit\",\n          children: isSubmitting ? 'Submitting' : 'Proceed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 6\n  }, this);\n};\n_s(FeesPaymentForm, \"zZdIlejVjbab5OLX8BvU97k4VIA=\", false, function () {\n  return [useForm, useParams, useLocation, useNavigate];\n});\n_c = FeesPaymentForm;\nexport default FeesPaymentForm;\nvar _c;\n$RefreshReg$(_c, \"FeesPaymentForm\");","map":{"version":3,"names":["Form","Link","useSearchParams","useActionData","useNavigate","useLocation","useParams","useForm","setValue","classes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeesPaymentForm","_s","_formData$address","branches","setBranches","selectedBranch","setSelectedBranch","students","setStudents","selectedStudent","setSelectedStudent","studentName","setStudentName","branchName","setBranchName","selectedMonth","setSelectedMonth","amountDue","setAmountDue","amountPaid","setAmountPaid","amount","setAmount","selectedMode","setSelectedMode","paymentDate","setPaymentDate","months","formData","setFormData","name","email","phone","address","monthly_fees","payments","register","handleSubmit","formState","errors","isSubmitting","reset","studentId","location","navigate","fetchBranches","response","fetch","data","json","console","log","error","fetchStudents","method","headers","fetchStudent","student","branch_id","branchResp","branch","branch_name","prevFormData","submitHandler","month","mode","body","JSON","stringify","alert","resetHandler","window","history","back","handleBranchChange","event","target","value","handleStudentChange","handleMonthChange","selectedIndex","amount_paid","amount_due","handleModeChange","handleDateChange","className","container","children","onSubmit","form","style","border","width","textAlign","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","control","display","justifyContent","marginTop","marginLeft","fontFamily","join","marginBottom","marginRight","htmlFor","id","required","onChange","map","index","height","paddingTop","minWidth","type","_id","message","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/components/FeesPaymentForm.js"],"sourcesContent":["import {\r\n  Form,\r\n  Link,\r\n  useSearchParams,\r\n  useActionData,\r\n  useNavigate\r\n} from 'react-router-dom';\r\nimport {useLocation, useParams} from 'react-router-dom';\r\nimport { useForm, setValue } from 'react-hook-form';\r\nimport classes from './RegistrationForm.module.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst FeesPaymentForm=()=>{\r\n    const [branches, setBranches] = useState([]); // State to hold branch names\r\n    const [selectedBranch, setSelectedBranch] = useState(''); // State to store selected branchId\r\n    const [students, setStudents] = useState([]); // State to hold student names\r\n    const [selectedStudent, setSelectedStudent] = useState(''); // State to store selected studentId\r\n    const [studentName,setStudentName]=useState('');    //state to hold student name in case of parameter studentId\r\n    const [branchName, setBranchName]=useState('');     //state to hold branch name in case of parameter studentId\r\n    const [selectedMonth, setSelectedMonth] = useState('');\r\n    const [amountDue, setAmountDue]=useState(null);\r\n    const [amountPaid, setAmountPaid]=useState(null);\r\n    const [amount, setAmount]=useState(null);\r\n    const [selectedMode, setSelectedMode]=useState(null);\r\n    const [paymentDate, setPaymentDate]=useState(null);\r\n\r\n\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n    const [formData, setFormData] = useState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          address: [],\r\n          monthly_fees: '',\r\n          payments:[]\r\n        });\r\n\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset\r\n  } = useForm();\r\n\r\n    const { studentId } = useParams();\r\n    const location = useLocation();\r\n    const navigate= useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchBranches = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/branches'); // Adjust your endpoint\r\n        const data = await response.json();\r\n        console.log(data.branches);\r\n        setBranches(data.branches); // Assuming data is an array of branch names\r\n      } catch (error) {\r\n        console.error('Error fetching branches:', error);\r\n      }\r\n    };\r\n\r\n    const fetchStudents=async()=>{\r\n      try{\r\n           const response=await fetch(`http://localhost:5000/students`,{\r\n                 method:'GET',\r\n                 headers:{\r\n                     'Content-Type':'application/json',\r\n                     }\r\n                 });\r\n\r\n           const {students}=await response.json();\r\n           console.log(students);\r\n           setStudents(students);\r\n       }\r\n       catch(error){\r\n           console.log(error);\r\n       }\r\n      };\r\n\r\n      const fetchStudent=async()=>{\r\n       if(studentId){\r\n            try{\r\n                 const response=await fetch(`http://localhost:5000/students/${studentId}`);\r\n                 const {student}=await response.json();\r\n                 console.log(student);\r\n                 if(student){\r\n                  setFormData({\r\n                            name: student.name,\r\n                            email: student.email,\r\n                            phone: student.phone,\r\n                            address: student.address,\r\n                            monthly_fees: student.monthly_fees,\r\n                            payments: student.payments\r\n                          });\r\n                  }\r\n                 if (student?.branch_id) {\r\n                    const branchResp=await fetch(`http://localhost:5000/branches/${student.branch_id}`);\r\n                    const {branch}=await branchResp.json();\r\n                    setBranchName(branch?.branch_name);\r\n\r\n                    setFormData((prevFormData) => ({\r\n                      ...prevFormData,\r\n                      branch: branch?.branch_name\r\n                    }));\r\n                 }\r\n             }\r\n             catch(error){\r\n                 console.log(error);\r\n             }\r\n         }\r\n       };\r\n\r\n      if (studentId)\r\n         fetchStudent();\r\n      else{\r\n          fetchBranches();\r\n          fetchStudents();\r\n      }\r\n    }, []);\r\n\r\n\r\n\r\n  const submitHandler =async (data) => {\r\n      console.log(data);\r\n\r\n    data.studentId = selectedBranch;\r\n    data.month = selectedMonth;\r\n    data.amount=amount;\r\n    data.mode=selectedMode;\r\n    data.paymentDate=paymentDate;\r\n    console.log(data);\r\n    let response;\r\n      response= await fetch(`http://localhost:5000/payment/${studentId}`, {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(data)\r\n     });\r\n\r\n      console.log(response);\r\n      alert('Fees Updated');\r\n      //navigate('/students');\r\n  };\r\n\r\n\r\n   const resetHandler=()=>{\r\n         window.history.back();\r\n   };\r\n\r\n\r\n    const handleBranchChange = (event) => {\r\n         setSelectedBranch(event.target.value); // Set selected branchId\r\n    };\r\n\r\n    const handleStudentChange = (event) => {\r\n         setSelectedStudent(event.target.value); // Set selected studentId\r\n    };\r\n\r\n    const handleMonthChange = (event) => {\r\n        setSelectedMonth(event.target.value);\r\n        console.log(formData.payments[event.target.selectedIndex-1].amount_paid);\r\n        setAmountDue(formData.payments[event.target.selectedIndex-1].amount_due);\r\n        setAmountPaid(formData.payments[event.target.selectedIndex-1].amount_paid);\r\n    };\r\n\r\n    const handleModeChange = (event) => {\r\n             setSelectedMode(event.target.value); // Set selected Mode\r\n    };\r\n\r\n    const handleDateChange = (event) => {\r\n        setPaymentDate(event.target.value);\r\n      };\r\n   return (\r\n     <div className={classes.container}>\r\n     <form onSubmit={handleSubmit(submitHandler)} className={classes.form} style={{ border:'2px solid grey'}}>\r\n        <>\r\n    {studentId ? (<>\r\n         <div style={{width:'100%',textAlign:'center',fontSize:'20px',fontWeight:'bold', border:'2px solid grey'}}>\r\n           <p>{formData.name}</p>\r\n         </div>\r\n\r\n        <div className={classes.control} style={{ display: \"flex\", justifyContent: \"space-between\",  border:'2px solid grey'}}>\r\n            <div style={{width:'50%', textAlign:'left', marginTop:'20px', marginLeft:'5px'}} >\r\n                <div style={{textAlign:'left'}}>Email:  {formData.email}</div>\r\n                <div style={{textAlign:'left'}}>Phone:  {formData.phone}</div>\r\n                <div style={{textAlign:'left'}}>Monthly Fees: Rs. {formData.monthly_fees}</div>\r\n\r\n            </div>\r\n            <div style={{textAlign: \"right\"}} >\r\n                <div  style={{textAlign:'left'}}>Branch:    {formData.branch}</div>\r\n                <pre style={{ fontSize: \"16px\", fontFamily: \"inherit\",  textAlign:'left' }}>Address:   {formData.address?.join('\\n')}</pre>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n        <div style={{marginTop:'20px',marginBottom:'20px', width:'40%'}}>\r\n              <label style={{marginRight:'15px'}} htmlFor=\"month\">Payment for</label>\r\n              <select\r\n                id=\"month\"\r\n                name=\"month\"\r\n                {...register(\"month\", { required: true })}\r\n                value={selectedMonth} onChange={handleMonthChange}>\r\n\r\n                <option value=\"\">Select Month</option>\r\n                {months.map((month, index) => (\r\n                <option key={index} value={month}>\r\n                  {month}\r\n                </option>\r\n              ))}\r\n             </select>\r\n         </div>\r\n        {selectedMonth && (<>\r\n         <div style={{width:'40%'}}>\r\n            <p>Amount Due: Rs. {amountDue}/-</p>\r\n         </div>\r\n         <div style={{width:'40%'}}>\r\n            <p>Amount Paid: Rs. {amountPaid}/-</p>\r\n         </div>\r\n         </>)}\r\n        </div>\r\n\r\n        <div style={{border:'1px solid blue', width:'80%', height:'40%', marginLeft:'75px', paddingTop:'20px'}}>\r\n               <div style={{marginLeft:'300px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"amount\">Date:</label>\r\n              <input\r\n                  style={{ width: '150px', height: '25px' }}\r\n                  type=\"date\"\r\n                  id=\"paymentDate\"\r\n                  name=\"paymentDate\"\r\n                  value={paymentDate}\r\n                  onChange={handleDateChange}\r\n                  />\r\n              </div>\r\n              <div style={{marginLeft:'300px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label  style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"amount\">Amount:</label>\r\n              Rs <input style={{width:'50px',height:'15px'}} type=\"text\" id=\"amount\" name=\"amount\"/>\r\n              </div>\r\n              <div style={{marginLeft:'300px', marginRight:'70px', marginBottom:'50px', textAlign:'left'}}>\r\n              <label style={{minWidth:'150px', display: 'inline-block'}} htmlFor=\"mode\">Mode of Payment:</label>\r\n             <select\r\n                id=\"mode\"\r\n                name=\"mode\" value={selectedMode} onChange={handleModeChange}>\r\n\r\n                <option value=\"\">Select Mode</option>\r\n                  <option  value=\"cash\">\r\n                    Cash\r\n                  </option>\r\n                  <option  value=\"upi\">\r\n                   UPI\r\n                  </option>\r\n                  <option  value=\"card\">\r\n                    Card\r\n                  </option>\r\n              </select>\r\n              </div>\r\n        </div>\r\n        </>\r\n      ):(\r\n        <>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"branch\">Branch</label>\r\n          <select\r\n            id=\"branch\"\r\n            name=\"branch\" value={selectedBranch} onChange={handleBranchChange}>\r\n\r\n            <option value=\"\">Select a Branch</option>\r\n            {branches && branches.map((branch) => (\r\n              <option key={branch._id} value={branch._id}>\r\n                {branch.branch_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"student\">Student</label>\r\n          <select\r\n            id=\"student\"\r\n            name=\"student\" value={selectedStudent} onChange={handleStudentChange}>\r\n\r\n            <option value=\"\">Select a Student</option>\r\n            {students && students.map((student) => (\r\n              <option key={student._id} value={student.name}>\r\n                {student.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.branch && <p className=\"errorMsg\">{errors.branch.message}</p>}\r\n        </div>\r\n        </>\r\n      )}\r\n      </>\r\n\r\n       <div style={{marginTop:'200px', justifyContent:'space-between', width:'1000px'}}>\r\n         <button style={{marginRight:'20px'}} className={classes.button} type=\"reset\" onClick={resetHandler}>\r\n           Cancel\r\n         </button>\r\n         <button className={classes.button} type=\"submit\" >\r\n           {isSubmitting? 'Submitting': 'Proceed'}\r\n         </button>\r\n        </div>\r\n\r\n\r\n     </form>\r\n    </div>\r\n\r\n   )\r\n\r\n}\r\nexport default FeesPaymentForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}