{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\swarsanskaar\\\\frontend\\\\src\\\\pages\\\\Students.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport StudentList from '../components/StudentList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Students() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const {\n    branchId\n  } = useParams();\n  console.log(\"branch\", branchId);\n  const fetchStudents = async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\n      if (!response.ok) {\n        throw new Error('Fetching Fabrics failed');\n      }\n      const {\n        students\n      } = await response.json();\n      console.log(resData);\n      setStudents(students);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchFabrics();\n    return () => {\n      dispatch(uiActions.clearNotification());\n    };\n  }, [dispatch, category, sub_category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fabrics && /*#__PURE__*/_jsxDEV(FabricsList, {\n      list: fabrics,\n      category: category,\n      sub_category: sub_category,\n      updateFabricList: fetchFabrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n}\n_s(Students, \"GA84bz6mNNLWrZbA5YIUE83h7ec=\", false, function () {\n  return [useParams];\n});\n_c = Students;\n;\nexport default FabricsPage;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["useEffect","useState","useContext","useParams","StudentList","jsxDEV","_jsxDEV","Fragment","_Fragment","Students","_s","students","setStudents","branchId","console","log","fetchStudents","dispatch","response","fetch","ok","Error","json","resData","error","message","fetchFabrics","uiActions","clearNotification","category","sub_category","children","fabrics","FabricsList","list","updateFabricList","fileName","_jsxFileName","lineNumber","columnNumber","_c","FabricsPage","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/swarsanskaar/frontend/src/pages/Students.js"],"sourcesContent":["import { useEffect, useState, useContext} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport StudentList from '../components/StudentList';\r\n\r\nfunction Students() {\r\n  const [students, setStudents] = useState([]);\r\n  const {branchId} = useParams();\r\n  console.log(\"branch\",branchId);\r\n\r\n    const fetchStudents=async(dispatch)=>{\r\n        try{\r\n\r\n              const response = await fetch(`http://localhost:5000/students/branch/${branchId}`);\r\n              if (!response.ok) {\r\n                throw new Error('Fetching Fabrics failed')\r\n              }\r\n              const {students} = await response.json();\r\n              console.log(resData);\r\n              setStudents(students);\r\n          }catch(error){\r\n            console.log(error.message);\r\n           }\r\n        }\r\n\r\n  useEffect(() => {\r\n        fetchFabrics();\r\n        return()=>{\r\n            dispatch(uiActions.clearNotification());\r\n        }\r\n    },[dispatch, category, sub_category]);\r\n    return (\r\n    <>{fabrics && <FabricsList list={fabrics} category={category} sub_category={sub_category} updateFabricList={fetchFabrics}/>}</>);\r\n  };\r\n\r\n    export default FabricsPage;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AACtD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACY;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9BW,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACF,QAAQ,CAAC;EAE5B,MAAMG,aAAa,GAAC,MAAMC,QAAQ,IAAG;IACjC,IAAG;MAEG,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCN,QAAQ,EAAE,CAAC;MACjF,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MACA,MAAM;QAACV;MAAQ,CAAC,GAAG,MAAMO,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxCR,OAAO,CAACC,GAAG,CAACQ,OAAO,CAAC;MACpBX,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,QAAMa,KAAK,EAAC;MACXV,OAAO,CAACC,GAAG,CAACS,KAAK,CAACC,OAAO,CAAC;IAC3B;EACH,CAAC;EAEPzB,SAAS,CAAC,MAAM;IACV0B,YAAY,CAAC,CAAC;IACd,OAAM,MAAI;MACNT,QAAQ,CAACU,SAAS,CAACC,iBAAiB,CAAC,CAAC,CAAC;IAC3C,CAAC;EACL,CAAC,EAAC,CAACX,QAAQ,EAAEY,QAAQ,EAAEC,YAAY,CAAC,CAAC;EACrC,oBACAxB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EAAGC,OAAO,iBAAI1B,OAAA,CAAC2B,WAAW;MAACC,IAAI,EAAEF,OAAQ;MAACH,QAAQ,EAAEA,QAAS;MAACC,YAAY,EAAEA,YAAa;MAACK,gBAAgB,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAAG,CAAC;AACjI;AAAC7B,EAAA,CA5BMD,QAAQ;EAAA,QAEIN,SAAS;AAAA;AAAAqC,EAAA,GAFrB/B,QAAQ;AA4Bd;AAEC,eAAegC,WAAW;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}